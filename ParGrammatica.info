-----------------------------------------------------------------------------
Info file generated by Happy Version 2.1.6 from ParGrammatica.y
-----------------------------------------------------------------------------

state 22 contains 1 shift/reduce conflicts.
state 27 contains 6 shift/reduce conflicts.
state 28 contains 2 shift/reduce conflicts.
state 29 contains 3 shift/reduce conflicts.
state 31 contains 1 shift/reduce conflicts.
state 67 contains 1 shift/reduce conflicts.
state 101 contains 1 shift/reduce conflicts.
state 121 contains 1 shift/reduce conflicts.
state 130 contains 1 shift/reduce conflicts.
state 138 contains 3 shift/reduce conflicts.
state 139 contains 3 shift/reduce conflicts.
state 180 contains 1 shift/reduce conflicts.

rule 9 is unused
rule 10 is unused
rule 11 is unused
rule 12 is unused
rule 13 is unused
rule 14 is unused
rule 15 is unused
rule 16 is unused

terminal L_WriteInt is unused
terminal L_WriteFloat is unused
terminal L_WriteChar is unused
terminal L_WriteString is unused
terminal L_ReadInt is unused
terminal L_ReadFloat is unused
terminal L_ReadChar is unused
terminal L_ReadString is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	%start_pStmt -> Stmt                               (1)
	%start_pRExpr -> RExpr                             (2)
	%start_pLExpr -> LExpr                             (3)
	Ident -> L_Ident                                   (4)
	Char -> L_charac                                   (5)
	Double -> L_doubl                                  (6)
	Integer -> L_integ                                 (7)
	String -> L_quoted                                 (8)
	WriteInt -> L_WriteInt                             (9)
	WriteFloat -> L_WriteFloat                         (10)
	WriteChar -> L_WriteChar                           (11)
	WriteString -> L_WriteString                       (12)
	ReadInt -> L_ReadInt                               (13)
	ReadFloat -> L_ReadFloat                           (14)
	ReadChar -> L_ReadChar                             (15)
	ReadString -> L_ReadString                         (16)
	Boolean -> 'true'                                  (17)
	Boolean -> 'false'                                 (18)
	RExpr -> RExpr1                                    (19)
	RExpr -> RExpr '||' RExpr1                         (20)
	RExpr1 -> RExpr2                                   (21)
	RExpr1 -> RExpr1 '&&' RExpr2                       (22)
	RExpr2 -> RExpr3                                   (23)
	RExpr2 -> '!' RExpr3                               (24)
	RExpr3 -> RExpr4                                   (25)
	RExpr4 -> RExpr5                                   (26)
	RExpr5 -> RExpr6                                   (27)
	RExpr5 -> RExpr6 '==' RExpr6                       (28)
	RExpr5 -> RExpr6 '!=' RExpr6                       (29)
	RExpr5 -> RExpr6 '<' RExpr6                        (30)
	RExpr5 -> RExpr6 '<=' RExpr6                       (31)
	RExpr5 -> RExpr6 '>' RExpr6                        (32)
	RExpr5 -> RExpr6 '>=' RExpr6                       (33)
	RExpr6 -> RExpr7                                   (34)
	RExpr7 -> RExpr8                                   (35)
	RExpr7 -> RExpr7 '+' RExpr8                        (36)
	RExpr7 -> RExpr7 '-' RExpr8                        (37)
	RExpr8 -> RExpr9                                   (38)
	RExpr8 -> RExpr8 '*' RExpr9                        (39)
	RExpr8 -> RExpr8 '/' RExpr9                        (40)
	RExpr8 -> RExpr8 '%' RExpr9                        (41)
	RExpr9 -> RExpr10                                  (42)
	RExpr9 -> RExpr10 '^' RExpr9                       (43)
	RExpr10 -> RExpr11                                 (44)
	RExpr11 -> RExpr12                                 (45)
	RExpr11 -> '-' RExpr12                             (46)
	RExpr11 -> '&' LExpr                               (47)
	RExpr12 -> RExpr13                                 (48)
	RExpr12 -> FunCall                                 (49)
	RExpr13 -> RExpr14                                 (50)
	RExpr13 -> Integer                                 (51)
	RExpr13 -> Char                                    (52)
	RExpr13 -> String                                  (53)
	RExpr13 -> Double                                  (54)
	RExpr13 -> Boolean                                 (55)
	RExpr14 -> '(' RExpr ')'                           (56)
	RExpr14 -> LExpr                                   (57)
	FunCall -> Ident '(' ListRExpr ')'                 (58)
	ListRExpr ->                                       (59)
	ListRExpr -> RExpr                                 (60)
	ListRExpr -> RExpr ',' ListRExpr                   (61)
	LExpr -> LExpr1                                    (62)
	LExpr -> '*' RExpr                                 (63)
	LExpr -> '++' LExpr1                               (64)
	LExpr -> '--' LExpr1                               (65)
	LExpr1 -> LExpr2                                   (66)
	LExpr1 -> LExpr2 '++'                              (67)
	LExpr1 -> LExpr2 '--'                              (68)
	LExpr2 -> '(' LExpr ')'                            (69)
	LExpr2 -> BLExpr                                   (70)
	BLExpr -> BLExpr '[' RExpr ']'                     (71)
	BLExpr -> Ident                                    (72)
	Program -> ListDecl                                (73)
	ListDecl ->                                        (74)
	ListDecl -> Decl ListDecl                          (75)
	Decl -> BasicType ListVarDeclInit ';'              (76)
	Decl -> TypeSpec ListVarDeclInit ';'               (77)
	Decl -> BasicType Ident '(' ListParameter ')' CompStmt   (78)
	ListVarDeclInit -> VarDeclInit                     (79)
	ListVarDeclInit -> VarDeclInit ',' ListVarDeclInit   (80)
	TypeSpec -> BasicType                              (81)
	TypeSpec -> CompoundType                           (82)
	BasicType -> 'bool'                                (83)
	BasicType -> 'char'                                (84)
	BasicType -> 'float'                               (85)
	BasicType -> 'int'                                 (86)
	CompoundType -> TypeSpec '[' Integer ']'           (87)
	CompoundType -> TypeSpec '[' ']'                   (88)
	CompoundType -> TypeSpec '*'                       (89)
	VarDeclInit -> Ident '=' ComplexRExpr              (90)
	ComplexRExpr -> RExpr                              (91)
	ComplexRExpr -> '[' ListComplexRExpr ']'           (92)
	ListComplexRExpr -> ComplexRExpr                   (93)
	ListComplexRExpr -> ComplexRExpr ',' ListComplexRExpr   (94)
	ListParameter ->                                   (95)
	ListParameter -> Parameter                         (96)
	ListParameter -> Parameter ',' ListParameter       (97)
	Parameter -> TypeSpec Ident                        (98)
	CompStmt -> CompStmtNocolon ';'                    (99)
	CompStmt -> CompStmtNocolon                        (100)
	CompStmtNocolon -> '{' ListDecl ListStmt '}'       (101)
	ListStmt ->                                        (102)
	ListStmt -> Stmt ListStmt                          (103)
	Stmt -> CompStmt                                   (104)
	Stmt -> FunCall ';'                                (105)
	Stmt -> JumpStmt ';'                               (106)
	Stmt -> IterStmt                                   (107)
	Stmt -> SelectionStmt                              (108)
	Stmt -> LExpr Assignment_op RExpr ';'              (109)
	Stmt -> LExpr ';'                                  (110)
	Assignment_op -> '='                               (111)
	Assignment_op -> '*='                              (112)
	Assignment_op -> '+='                              (113)
	Assignment_op -> '/='                              (114)
	Assignment_op -> '-='                              (115)
	Assignment_op -> '^='                              (116)
	Assignment_op -> '&='                              (117)
	Assignment_op -> '|='                              (118)
	JumpStmt -> 'break'                                (119)
	JumpStmt -> 'continue'                             (120)
	JumpStmt -> 'return'                               (121)
	JumpStmt -> 'return' '(' RExpr ')'                 (122)
	SelectionStmt -> 'if' '(' RExpr ')' Stmt           (123)
	SelectionStmt -> 'if' '(' RExpr ')' Stmt 'else' Stmt   (124)
	IterStmt -> 'while' '(' RExpr ')' Stmt             (125)
	IterStmt -> 'do' Stmt 'while' '(' RExpr ')' ';'    (126)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&'            { PT _ (TS _ 4) }
	'&&'           { PT _ (TS _ 5) }
	'&='           { PT _ (TS _ 6) }
	'('            { PT _ (TS _ 7) }
	')'            { PT _ (TS _ 8) }
	'*'            { PT _ (TS _ 9) }
	'*='           { PT _ (TS _ 10) }
	'+'            { PT _ (TS _ 11) }
	'++'           { PT _ (TS _ 12) }
	'+='           { PT _ (TS _ 13) }
	','            { PT _ (TS _ 14) }
	'-'            { PT _ (TS _ 15) }
	'--'           { PT _ (TS _ 16) }
	'-='           { PT _ (TS _ 17) }
	'/'            { PT _ (TS _ 18) }
	'/='           { PT _ (TS _ 19) }
	';'            { PT _ (TS _ 20) }
	'<'            { PT _ (TS _ 21) }
	'<='           { PT _ (TS _ 22) }
	'='            { PT _ (TS _ 23) }
	'=='           { PT _ (TS _ 24) }
	'>'            { PT _ (TS _ 25) }
	'>='           { PT _ (TS _ 26) }
	'['            { PT _ (TS _ 27) }
	']'            { PT _ (TS _ 28) }
	'^'            { PT _ (TS _ 29) }
	'^='           { PT _ (TS _ 30) }
	'bool'         { PT _ (TS _ 31) }
	'break'        { PT _ (TS _ 32) }
	'char'         { PT _ (TS _ 33) }
	'continue'     { PT _ (TS _ 34) }
	'do'           { PT _ (TS _ 35) }
	'else'         { PT _ (TS _ 36) }
	'false'        { PT _ (TS _ 37) }
	'float'        { PT _ (TS _ 38) }
	'if'           { PT _ (TS _ 39) }
	'int'          { PT _ (TS _ 40) }
	'return'       { PT _ (TS _ 41) }
	'true'         { PT _ (TS _ 42) }
	'while'        { PT _ (TS _ 43) }
	'{'            { PT _ (TS _ 44) }
	'|='           { PT _ (TS _ 45) }
	'||'           { PT _ (TS _ 46) }
	'}'            { PT _ (TS _ 47) }
	L_Ident        { PT _ (TV $$) }
	L_charac       { PT _ (TC $$) }
	L_doubl        { PT _ (TD $$) }
	L_integ        { PT _ (TI $$) }
	L_quoted       { PT _ (TL $$) }
	L_WriteInt     { PT _ (T_WriteInt $$) }
	L_WriteFloat   { PT _ (T_WriteFloat $$) }
	L_WriteChar    { PT _ (T_WriteChar $$) }
	L_WriteString  { PT _ (T_WriteString $$) }
	L_ReadInt      { PT _ (T_ReadInt $$) }
	L_ReadFloat    { PT _ (T_ReadFloat $$) }
	L_ReadChar     { PT _ (T_ReadChar $$) }
	L_ReadString   { PT _ (T_ReadString $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	%start_pStmt    rule  1
	%start_pRExpr   rule  2
	%start_pLExpr   rule  3
	Ident           rule  4
	Char            rule  5
	Double          rule  6
	Integer         rule  7
	String          rule  8
	WriteInt        rule  9
	WriteFloat      rule  10
	WriteChar       rule  11
	WriteString     rule  12
	ReadInt         rule  13
	ReadFloat       rule  14
	ReadChar        rule  15
	ReadString      rule  16
	Boolean         rules 17, 18
	RExpr           rules 19, 20
	RExpr1          rules 21, 22
	RExpr2          rules 23, 24
	RExpr3          rule  25
	RExpr4          rule  26
	RExpr5          rules 27, 28, 29, 30, 31, 32, 33
	RExpr6          rule  34
	RExpr7          rules 35, 36, 37
	RExpr8          rules 38, 39, 40, 41
	RExpr9          rules 42, 43
	RExpr10         rule  44
	RExpr11         rules 45, 46, 47
	RExpr12         rules 48, 49
	RExpr13         rules 50, 51, 52, 53, 54, 55
	RExpr14         rules 56, 57
	FunCall         rule  58
	ListRExpr       rules 59, 60, 61
	LExpr           rules 62, 63, 64, 65
	LExpr1          rules 66, 67, 68
	LExpr2          rules 69, 70
	BLExpr          rules 71, 72
	Program         rule  73
	ListDecl        rules 74, 75
	Decl            rules 76, 77, 78
	ListVarDeclInit rules 79, 80
	TypeSpec        rules 81, 82
	BasicType       rules 83, 84, 85, 86
	CompoundType    rules 87, 88, 89
	VarDeclInit     rule  90
	ComplexRExpr    rules 91, 92
	ListComplexRExpr rules 93, 94
	ListParameter   rules 95, 96, 97
	Parameter       rule  98
	CompStmt        rules 99, 100
	CompStmtNocolon rule  101
	ListStmt        rules 102, 103
	Stmt            rules 104, 105, 106, 107, 108, 109, 110
	Assignment_op   rules 111, 112, 113, 114, 115, 116, 117, 118
	JumpStmt        rules 119, 120, 121, 122
	SelectionStmt   rules 123, 124
	IterStmt        rules 125, 126

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram -> . Program                        (rule 0)

	'bool'         shift, and enter state 69
	'char'         shift, and enter state 70
	'float'        shift, and enter state 71
	'int'          shift, and enter state 72
	%eof           reduce using rule 74

	Program        goto state 63
	ListDecl       goto state 64
	Decl           goto state 65
	TypeSpec       goto state 66
	BasicType      goto state 67
	CompoundType   goto state 68

State 1

	%start_pStmt -> . Stmt                              (rule 1)

	'('            shift, and enter state 11
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'--'           shift, and enter state 14
	'break'        shift, and enter state 56
	'continue'     shift, and enter state 57
	'do'           shift, and enter state 58
	'if'           shift, and enter state 59
	'return'       shift, and enter state 60
	'while'        shift, and enter state 61
	'{'            shift, and enter state 62
	L_Ident        shift, and enter state 5

	Ident          goto state 15
	FunCall        goto state 48
	LExpr          goto state 49
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10
	CompStmt       goto state 50
	CompStmtNocolongoto state 51
	Stmt           goto state 52
	JumpStmt       goto state 53
	SelectionStmt  goto state 54
	IterStmt       goto state 55

State 2

	%start_pRExpr -> . RExpr                            (rule 2)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 41
	'--'           shift, and enter state 14
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 15
	Char           goto state 16
	Double         goto state 17
	Integer        goto state 18
	String         goto state 19
	Boolean        goto state 20
	RExpr          goto state 21
	RExpr1         goto state 22
	RExpr2         goto state 23
	RExpr3         goto state 24
	RExpr4         goto state 25
	RExpr5         goto state 26
	RExpr6         goto state 27
	RExpr7         goto state 28
	RExpr8         goto state 29
	RExpr9         goto state 30
	RExpr10        goto state 31
	RExpr11        goto state 32
	RExpr12        goto state 33
	RExpr13        goto state 34
	RExpr14        goto state 35
	FunCall        goto state 36
	LExpr          goto state 37
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 3

	%start_pLExpr -> . LExpr                            (rule 3)

	'('            shift, and enter state 11
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'--'           shift, and enter state 14
	L_Ident        shift, and enter state 5

	Ident          goto state 6
	LExpr          goto state 7
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 4

	Ident -> . L_Ident                                  (rule 4)

	L_Ident        shift, and enter state 5


State 5

	Ident -> L_Ident .                                  (rule 4)

	'!='           reduce using rule 4
	'%'            reduce using rule 4
	'&&'           reduce using rule 4
	'&='           reduce using rule 4
	'('            reduce using rule 4
	')'            reduce using rule 4
	'*'            reduce using rule 4
	'*='           reduce using rule 4
	'+'            reduce using rule 4
	'++'           reduce using rule 4
	'+='           reduce using rule 4
	','            reduce using rule 4
	'-'            reduce using rule 4
	'--'           reduce using rule 4
	'-='           reduce using rule 4
	'/'            reduce using rule 4
	'/='           reduce using rule 4
	';'            reduce using rule 4
	'<'            reduce using rule 4
	'<='           reduce using rule 4
	'='            reduce using rule 4
	'=='           reduce using rule 4
	'>'            reduce using rule 4
	'>='           reduce using rule 4
	'['            reduce using rule 4
	']'            reduce using rule 4
	'^'            reduce using rule 4
	'^='           reduce using rule 4
	'|='           reduce using rule 4
	'||'           reduce using rule 4
	%eof           reduce using rule 4


State 6

	BLExpr -> Ident .                                   (rule 72)

	'!='           reduce using rule 72
	'%'            reduce using rule 72
	'&&'           reduce using rule 72
	'&='           reduce using rule 72
	')'            reduce using rule 72
	'*'            reduce using rule 72
	'*='           reduce using rule 72
	'+'            reduce using rule 72
	'++'           reduce using rule 72
	'+='           reduce using rule 72
	','            reduce using rule 72
	'-'            reduce using rule 72
	'--'           reduce using rule 72
	'-='           reduce using rule 72
	'/'            reduce using rule 72
	'/='           reduce using rule 72
	';'            reduce using rule 72
	'<'            reduce using rule 72
	'<='           reduce using rule 72
	'='            reduce using rule 72
	'=='           reduce using rule 72
	'>'            reduce using rule 72
	'>='           reduce using rule 72
	'['            reduce using rule 72
	']'            reduce using rule 72
	'^'            reduce using rule 72
	'^='           reduce using rule 72
	'|='           reduce using rule 72
	'||'           reduce using rule 72
	%eof           reduce using rule 72


State 7

	%start_pLExpr -> LExpr .                            (rule 3)

	%eof           accept


State 8

	LExpr -> LExpr1 .                                   (rule 62)

	'!='           reduce using rule 62
	'%'            reduce using rule 62
	'&&'           reduce using rule 62
	'&='           reduce using rule 62
	')'            reduce using rule 62
	'*'            reduce using rule 62
	'*='           reduce using rule 62
	'+'            reduce using rule 62
	'+='           reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'-='           reduce using rule 62
	'/'            reduce using rule 62
	'/='           reduce using rule 62
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'='            reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	']'            reduce using rule 62
	'^'            reduce using rule 62
	'^='           reduce using rule 62
	'|='           reduce using rule 62
	'||'           reduce using rule 62
	%eof           reduce using rule 62


State 9

	LExpr1 -> LExpr2 .                                  (rule 66)
	LExpr1 -> LExpr2 . '++'                             (rule 67)
	LExpr1 -> LExpr2 . '--'                             (rule 68)

	'!='           reduce using rule 66
	'%'            reduce using rule 66
	'&&'           reduce using rule 66
	'&='           reduce using rule 66
	')'            reduce using rule 66
	'*'            reduce using rule 66
	'*='           reduce using rule 66
	'+'            reduce using rule 66
	'++'           shift, and enter state 124
	'+='           reduce using rule 66
	','            reduce using rule 66
	'-'            reduce using rule 66
	'--'           shift, and enter state 125
	'-='           reduce using rule 66
	'/'            reduce using rule 66
	'/='           reduce using rule 66
	';'            reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'='            reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	']'            reduce using rule 66
	'^'            reduce using rule 66
	'^='           reduce using rule 66
	'|='           reduce using rule 66
	'||'           reduce using rule 66
	%eof           reduce using rule 66


State 10

	LExpr2 -> BLExpr .                                  (rule 70)
	BLExpr -> BLExpr . '[' RExpr ']'                    (rule 71)

	'!='           reduce using rule 70
	'%'            reduce using rule 70
	'&&'           reduce using rule 70
	'&='           reduce using rule 70
	')'            reduce using rule 70
	'*'            reduce using rule 70
	'*='           reduce using rule 70
	'+'            reduce using rule 70
	'++'           reduce using rule 70
	'+='           reduce using rule 70
	','            reduce using rule 70
	'-'            reduce using rule 70
	'--'           reduce using rule 70
	'-='           reduce using rule 70
	'/'            reduce using rule 70
	'/='           reduce using rule 70
	';'            reduce using rule 70
	'<'            reduce using rule 70
	'<='           reduce using rule 70
	'='            reduce using rule 70
	'=='           reduce using rule 70
	'>'            reduce using rule 70
	'>='           reduce using rule 70
	'['            shift, and enter state 123
	']'            reduce using rule 70
	'^'            reduce using rule 70
	'^='           reduce using rule 70
	'|='           reduce using rule 70
	'||'           reduce using rule 70
	%eof           reduce using rule 70


State 11

	LExpr2 -> '(' . LExpr ')'                           (rule 69)

	'('            shift, and enter state 11
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'--'           shift, and enter state 14
	L_Ident        shift, and enter state 5

	Ident          goto state 6
	LExpr          goto state 122
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 12

	LExpr -> '*' . RExpr                                (rule 63)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 41
	'--'           shift, and enter state 14
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 15
	Char           goto state 16
	Double         goto state 17
	Integer        goto state 18
	String         goto state 19
	Boolean        goto state 20
	RExpr          goto state 121
	RExpr1         goto state 22
	RExpr2         goto state 23
	RExpr3         goto state 24
	RExpr4         goto state 25
	RExpr5         goto state 26
	RExpr6         goto state 27
	RExpr7         goto state 28
	RExpr8         goto state 29
	RExpr9         goto state 30
	RExpr10        goto state 31
	RExpr11        goto state 32
	RExpr12        goto state 33
	RExpr13        goto state 34
	RExpr14        goto state 35
	FunCall        goto state 36
	LExpr          goto state 37
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 13

	LExpr -> '++' . LExpr1                              (rule 64)

	'('            shift, and enter state 11
	L_Ident        shift, and enter state 5

	Ident          goto state 6
	LExpr1         goto state 120
	LExpr2         goto state 9
	BLExpr         goto state 10

State 14

	LExpr -> '--' . LExpr1                              (rule 65)

	'('            shift, and enter state 11
	L_Ident        shift, and enter state 5

	Ident          goto state 6
	LExpr1         goto state 119
	LExpr2         goto state 9
	BLExpr         goto state 10

State 15

	FunCall -> Ident . '(' ListRExpr ')'                (rule 58)
	BLExpr -> Ident .                                   (rule 72)

	'!='           reduce using rule 72
	'%'            reduce using rule 72
	'&&'           reduce using rule 72
	'&='           reduce using rule 72
	'('            shift, and enter state 118
	')'            reduce using rule 72
	'*'            reduce using rule 72
	'*='           reduce using rule 72
	'+'            reduce using rule 72
	'++'           reduce using rule 72
	'+='           reduce using rule 72
	','            reduce using rule 72
	'-'            reduce using rule 72
	'--'           reduce using rule 72
	'-='           reduce using rule 72
	'/'            reduce using rule 72
	'/='           reduce using rule 72
	';'            reduce using rule 72
	'<'            reduce using rule 72
	'<='           reduce using rule 72
	'='            reduce using rule 72
	'=='           reduce using rule 72
	'>'            reduce using rule 72
	'>='           reduce using rule 72
	'['            reduce using rule 72
	']'            reduce using rule 72
	'^'            reduce using rule 72
	'^='           reduce using rule 72
	'|='           reduce using rule 72
	'||'           reduce using rule 72
	%eof           reduce using rule 72


State 16

	RExpr13 -> Char .                                   (rule 52)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	'&='           reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'*='           reduce using rule 52
	'+'            reduce using rule 52
	'+='           reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'-='           reduce using rule 52
	'/'            reduce using rule 52
	'/='           reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'='            reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	']'            reduce using rule 52
	'^'            reduce using rule 52
	'^='           reduce using rule 52
	'|='           reduce using rule 52
	'||'           reduce using rule 52
	%eof           reduce using rule 52


State 17

	RExpr13 -> Double .                                 (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	'&='           reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'*='           reduce using rule 54
	'+'            reduce using rule 54
	'+='           reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'-='           reduce using rule 54
	'/'            reduce using rule 54
	'/='           reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'='            reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	']'            reduce using rule 54
	'^'            reduce using rule 54
	'^='           reduce using rule 54
	'|='           reduce using rule 54
	'||'           reduce using rule 54
	%eof           reduce using rule 54


State 18

	RExpr13 -> Integer .                                (rule 51)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	'&='           reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'*='           reduce using rule 51
	'+'            reduce using rule 51
	'+='           reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'-='           reduce using rule 51
	'/'            reduce using rule 51
	'/='           reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'='            reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	']'            reduce using rule 51
	'^'            reduce using rule 51
	'^='           reduce using rule 51
	'|='           reduce using rule 51
	'||'           reduce using rule 51
	%eof           reduce using rule 51


State 19

	RExpr13 -> String .                                 (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	'&='           reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'*='           reduce using rule 53
	'+'            reduce using rule 53
	'+='           reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'-='           reduce using rule 53
	'/'            reduce using rule 53
	'/='           reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'='            reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	']'            reduce using rule 53
	'^'            reduce using rule 53
	'^='           reduce using rule 53
	'|='           reduce using rule 53
	'||'           reduce using rule 53
	%eof           reduce using rule 53


State 20

	RExpr13 -> Boolean .                                (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	'&='           reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'*='           reduce using rule 55
	'+'            reduce using rule 55
	'+='           reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'-='           reduce using rule 55
	'/'            reduce using rule 55
	'/='           reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'='            reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	']'            reduce using rule 55
	'^'            reduce using rule 55
	'^='           reduce using rule 55
	'|='           reduce using rule 55
	'||'           reduce using rule 55
	%eof           reduce using rule 55


State 21

	%start_pRExpr -> RExpr .                            (rule 2)
	RExpr -> RExpr . '||' RExpr1                        (rule 20)

	'||'           shift, and enter state 117
	%eof           accept


State 22

	RExpr -> RExpr1 .                                   (rule 19)
	RExpr1 -> RExpr1 . '&&' RExpr2                      (rule 22)

	'!='           reduce using rule 19
	'%'            reduce using rule 19
	'&&'           shift, and enter state 116
			(reduce using rule 19)

	'&='           reduce using rule 19
	')'            reduce using rule 19
	'*'            reduce using rule 19
	'*='           reduce using rule 19
	'+'            reduce using rule 19
	'+='           reduce using rule 19
	','            reduce using rule 19
	'-'            reduce using rule 19
	'-='           reduce using rule 19
	'/'            reduce using rule 19
	'/='           reduce using rule 19
	';'            reduce using rule 19
	'<'            reduce using rule 19
	'<='           reduce using rule 19
	'='            reduce using rule 19
	'=='           reduce using rule 19
	'>'            reduce using rule 19
	'>='           reduce using rule 19
	']'            reduce using rule 19
	'^'            reduce using rule 19
	'^='           reduce using rule 19
	'|='           reduce using rule 19
	'||'           reduce using rule 19
	%eof           reduce using rule 19


State 23

	RExpr1 -> RExpr2 .                                  (rule 21)

	'!='           reduce using rule 21
	'%'            reduce using rule 21
	'&&'           reduce using rule 21
	'&='           reduce using rule 21
	')'            reduce using rule 21
	'*'            reduce using rule 21
	'*='           reduce using rule 21
	'+'            reduce using rule 21
	'+='           reduce using rule 21
	','            reduce using rule 21
	'-'            reduce using rule 21
	'-='           reduce using rule 21
	'/'            reduce using rule 21
	'/='           reduce using rule 21
	';'            reduce using rule 21
	'<'            reduce using rule 21
	'<='           reduce using rule 21
	'='            reduce using rule 21
	'=='           reduce using rule 21
	'>'            reduce using rule 21
	'>='           reduce using rule 21
	']'            reduce using rule 21
	'^'            reduce using rule 21
	'^='           reduce using rule 21
	'|='           reduce using rule 21
	'||'           reduce using rule 21
	%eof           reduce using rule 21


State 24

	RExpr2 -> RExpr3 .                                  (rule 23)

	'!='           reduce using rule 23
	'%'            reduce using rule 23
	'&&'           reduce using rule 23
	'&='           reduce using rule 23
	')'            reduce using rule 23
	'*'            reduce using rule 23
	'*='           reduce using rule 23
	'+'            reduce using rule 23
	'+='           reduce using rule 23
	','            reduce using rule 23
	'-'            reduce using rule 23
	'-='           reduce using rule 23
	'/'            reduce using rule 23
	'/='           reduce using rule 23
	';'            reduce using rule 23
	'<'            reduce using rule 23
	'<='           reduce using rule 23
	'='            reduce using rule 23
	'=='           reduce using rule 23
	'>'            reduce using rule 23
	'>='           reduce using rule 23
	']'            reduce using rule 23
	'^'            reduce using rule 23
	'^='           reduce using rule 23
	'|='           reduce using rule 23
	'||'           reduce using rule 23
	%eof           reduce using rule 23


State 25

	RExpr3 -> RExpr4 .                                  (rule 25)

	'!='           reduce using rule 25
	'%'            reduce using rule 25
	'&&'           reduce using rule 25
	'&='           reduce using rule 25
	')'            reduce using rule 25
	'*'            reduce using rule 25
	'*='           reduce using rule 25
	'+'            reduce using rule 25
	'+='           reduce using rule 25
	','            reduce using rule 25
	'-'            reduce using rule 25
	'-='           reduce using rule 25
	'/'            reduce using rule 25
	'/='           reduce using rule 25
	';'            reduce using rule 25
	'<'            reduce using rule 25
	'<='           reduce using rule 25
	'='            reduce using rule 25
	'=='           reduce using rule 25
	'>'            reduce using rule 25
	'>='           reduce using rule 25
	']'            reduce using rule 25
	'^'            reduce using rule 25
	'^='           reduce using rule 25
	'|='           reduce using rule 25
	'||'           reduce using rule 25
	%eof           reduce using rule 25


State 26

	RExpr4 -> RExpr5 .                                  (rule 26)

	'!='           reduce using rule 26
	'%'            reduce using rule 26
	'&&'           reduce using rule 26
	'&='           reduce using rule 26
	')'            reduce using rule 26
	'*'            reduce using rule 26
	'*='           reduce using rule 26
	'+'            reduce using rule 26
	'+='           reduce using rule 26
	','            reduce using rule 26
	'-'            reduce using rule 26
	'-='           reduce using rule 26
	'/'            reduce using rule 26
	'/='           reduce using rule 26
	';'            reduce using rule 26
	'<'            reduce using rule 26
	'<='           reduce using rule 26
	'='            reduce using rule 26
	'=='           reduce using rule 26
	'>'            reduce using rule 26
	'>='           reduce using rule 26
	']'            reduce using rule 26
	'^'            reduce using rule 26
	'^='           reduce using rule 26
	'|='           reduce using rule 26
	'||'           reduce using rule 26
	%eof           reduce using rule 26


State 27

	RExpr5 -> RExpr6 .                                  (rule 27)
	RExpr5 -> RExpr6 . '==' RExpr6                      (rule 28)
	RExpr5 -> RExpr6 . '!=' RExpr6                      (rule 29)
	RExpr5 -> RExpr6 . '<' RExpr6                       (rule 30)
	RExpr5 -> RExpr6 . '<=' RExpr6                      (rule 31)
	RExpr5 -> RExpr6 . '>' RExpr6                       (rule 32)
	RExpr5 -> RExpr6 . '>=' RExpr6                      (rule 33)

	'!='           shift, and enter state 110
			(reduce using rule 27)

	'%'            reduce using rule 27
	'&&'           reduce using rule 27
	'&='           reduce using rule 27
	')'            reduce using rule 27
	'*'            reduce using rule 27
	'*='           reduce using rule 27
	'+'            reduce using rule 27
	'+='           reduce using rule 27
	','            reduce using rule 27
	'-'            reduce using rule 27
	'-='           reduce using rule 27
	'/'            reduce using rule 27
	'/='           reduce using rule 27
	';'            reduce using rule 27
	'<'            shift, and enter state 111
			(reduce using rule 27)

	'<='           shift, and enter state 112
			(reduce using rule 27)

	'='            reduce using rule 27
	'=='           shift, and enter state 113
			(reduce using rule 27)

	'>'            shift, and enter state 114
			(reduce using rule 27)

	'>='           shift, and enter state 115
			(reduce using rule 27)

	']'            reduce using rule 27
	'^'            reduce using rule 27
	'^='           reduce using rule 27
	'|='           reduce using rule 27
	'||'           reduce using rule 27
	%eof           reduce using rule 27


State 28

	RExpr6 -> RExpr7 .                                  (rule 34)
	RExpr7 -> RExpr7 . '+' RExpr8                       (rule 36)
	RExpr7 -> RExpr7 . '-' RExpr8                       (rule 37)

	'!='           reduce using rule 34
	'%'            reduce using rule 34
	'&&'           reduce using rule 34
	'&='           reduce using rule 34
	')'            reduce using rule 34
	'*'            reduce using rule 34
	'*='           reduce using rule 34
	'+'            shift, and enter state 108
			(reduce using rule 34)

	'+='           reduce using rule 34
	','            reduce using rule 34
	'-'            shift, and enter state 109
			(reduce using rule 34)

	'-='           reduce using rule 34
	'/'            reduce using rule 34
	'/='           reduce using rule 34
	';'            reduce using rule 34
	'<'            reduce using rule 34
	'<='           reduce using rule 34
	'='            reduce using rule 34
	'=='           reduce using rule 34
	'>'            reduce using rule 34
	'>='           reduce using rule 34
	']'            reduce using rule 34
	'^'            reduce using rule 34
	'^='           reduce using rule 34
	'|='           reduce using rule 34
	'||'           reduce using rule 34
	%eof           reduce using rule 34


State 29

	RExpr7 -> RExpr8 .                                  (rule 35)
	RExpr8 -> RExpr8 . '*' RExpr9                       (rule 39)
	RExpr8 -> RExpr8 . '/' RExpr9                       (rule 40)
	RExpr8 -> RExpr8 . '%' RExpr9                       (rule 41)

	'!='           reduce using rule 35
	'%'            shift, and enter state 105
			(reduce using rule 35)

	'&&'           reduce using rule 35
	'&='           reduce using rule 35
	')'            reduce using rule 35
	'*'            shift, and enter state 106
			(reduce using rule 35)

	'*='           reduce using rule 35
	'+'            reduce using rule 35
	'+='           reduce using rule 35
	','            reduce using rule 35
	'-'            reduce using rule 35
	'-='           reduce using rule 35
	'/'            shift, and enter state 107
			(reduce using rule 35)

	'/='           reduce using rule 35
	';'            reduce using rule 35
	'<'            reduce using rule 35
	'<='           reduce using rule 35
	'='            reduce using rule 35
	'=='           reduce using rule 35
	'>'            reduce using rule 35
	'>='           reduce using rule 35
	']'            reduce using rule 35
	'^'            reduce using rule 35
	'^='           reduce using rule 35
	'|='           reduce using rule 35
	'||'           reduce using rule 35
	%eof           reduce using rule 35


State 30

	RExpr8 -> RExpr9 .                                  (rule 38)

	'!='           reduce using rule 38
	'%'            reduce using rule 38
	'&&'           reduce using rule 38
	'&='           reduce using rule 38
	')'            reduce using rule 38
	'*'            reduce using rule 38
	'*='           reduce using rule 38
	'+'            reduce using rule 38
	'+='           reduce using rule 38
	','            reduce using rule 38
	'-'            reduce using rule 38
	'-='           reduce using rule 38
	'/'            reduce using rule 38
	'/='           reduce using rule 38
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'='            reduce using rule 38
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	']'            reduce using rule 38
	'^'            reduce using rule 38
	'^='           reduce using rule 38
	'|='           reduce using rule 38
	'||'           reduce using rule 38
	%eof           reduce using rule 38


State 31

	RExpr9 -> RExpr10 .                                 (rule 42)
	RExpr9 -> RExpr10 . '^' RExpr9                      (rule 43)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	'&='           reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'*='           reduce using rule 42
	'+'            reduce using rule 42
	'+='           reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'-='           reduce using rule 42
	'/'            reduce using rule 42
	'/='           reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'='            reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	']'            reduce using rule 42
	'^'            shift, and enter state 104
			(reduce using rule 42)

	'^='           reduce using rule 42
	'|='           reduce using rule 42
	'||'           reduce using rule 42
	%eof           reduce using rule 42


State 32

	RExpr10 -> RExpr11 .                                (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	'&='           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'*='           reduce using rule 44
	'+'            reduce using rule 44
	'+='           reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'-='           reduce using rule 44
	'/'            reduce using rule 44
	'/='           reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'='            reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	']'            reduce using rule 44
	'^'            reduce using rule 44
	'^='           reduce using rule 44
	'|='           reduce using rule 44
	'||'           reduce using rule 44
	%eof           reduce using rule 44


State 33

	RExpr11 -> RExpr12 .                                (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	'&='           reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'*='           reduce using rule 45
	'+'            reduce using rule 45
	'+='           reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'-='           reduce using rule 45
	'/'            reduce using rule 45
	'/='           reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'='            reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	']'            reduce using rule 45
	'^'            reduce using rule 45
	'^='           reduce using rule 45
	'|='           reduce using rule 45
	'||'           reduce using rule 45
	%eof           reduce using rule 45


State 34

	RExpr12 -> RExpr13 .                                (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	'&='           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'*='           reduce using rule 48
	'+'            reduce using rule 48
	'+='           reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'-='           reduce using rule 48
	'/'            reduce using rule 48
	'/='           reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'='            reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	']'            reduce using rule 48
	'^'            reduce using rule 48
	'^='           reduce using rule 48
	'|='           reduce using rule 48
	'||'           reduce using rule 48
	%eof           reduce using rule 48


State 35

	RExpr13 -> RExpr14 .                                (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	'&='           reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'*='           reduce using rule 50
	'+'            reduce using rule 50
	'+='           reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'-='           reduce using rule 50
	'/'            reduce using rule 50
	'/='           reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'='            reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	']'            reduce using rule 50
	'^'            reduce using rule 50
	'^='           reduce using rule 50
	'|='           reduce using rule 50
	'||'           reduce using rule 50
	%eof           reduce using rule 50


State 36

	RExpr12 -> FunCall .                                (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	'&='           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'*='           reduce using rule 49
	'+'            reduce using rule 49
	'+='           reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'-='           reduce using rule 49
	'/'            reduce using rule 49
	'/='           reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'='            reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	']'            reduce using rule 49
	'^'            reduce using rule 49
	'^='           reduce using rule 49
	'|='           reduce using rule 49
	'||'           reduce using rule 49
	%eof           reduce using rule 49


State 37

	RExpr14 -> LExpr .                                  (rule 57)

	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&&'           reduce using rule 57
	'&='           reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'*='           reduce using rule 57
	'+'            reduce using rule 57
	'+='           reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'-='           reduce using rule 57
	'/'            reduce using rule 57
	'/='           reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'='            reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	']'            reduce using rule 57
	'^'            reduce using rule 57
	'^='           reduce using rule 57
	'|='           reduce using rule 57
	'||'           reduce using rule 57
	%eof           reduce using rule 57


State 38

	RExpr2 -> '!' . RExpr3                              (rule 24)

	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 41
	'--'           shift, and enter state 14
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 15
	Char           goto state 16
	Double         goto state 17
	Integer        goto state 18
	String         goto state 19
	Boolean        goto state 20
	RExpr3         goto state 103
	RExpr4         goto state 25
	RExpr5         goto state 26
	RExpr6         goto state 27
	RExpr7         goto state 28
	RExpr8         goto state 29
	RExpr9         goto state 30
	RExpr10        goto state 31
	RExpr11        goto state 32
	RExpr12        goto state 33
	RExpr13        goto state 34
	RExpr14        goto state 35
	FunCall        goto state 36
	LExpr          goto state 37
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 39

	RExpr11 -> '&' . LExpr                              (rule 47)

	'('            shift, and enter state 11
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'--'           shift, and enter state 14
	L_Ident        shift, and enter state 5

	Ident          goto state 6
	LExpr          goto state 102
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 40

	RExpr14 -> '(' . RExpr ')'                          (rule 56)
	LExpr2 -> '(' . LExpr ')'                           (rule 69)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 41
	'--'           shift, and enter state 14
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 15
	Char           goto state 16
	Double         goto state 17
	Integer        goto state 18
	String         goto state 19
	Boolean        goto state 20
	RExpr          goto state 100
	RExpr1         goto state 22
	RExpr2         goto state 23
	RExpr3         goto state 24
	RExpr4         goto state 25
	RExpr5         goto state 26
	RExpr6         goto state 27
	RExpr7         goto state 28
	RExpr8         goto state 29
	RExpr9         goto state 30
	RExpr10        goto state 31
	RExpr11        goto state 32
	RExpr12        goto state 33
	RExpr13        goto state 34
	RExpr14        goto state 35
	FunCall        goto state 36
	LExpr          goto state 101
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 41

	RExpr11 -> '-' . RExpr12                            (rule 46)

	'('            shift, and enter state 40
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'--'           shift, and enter state 14
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 15
	Char           goto state 16
	Double         goto state 17
	Integer        goto state 18
	String         goto state 19
	Boolean        goto state 20
	RExpr12        goto state 99
	RExpr13        goto state 34
	RExpr14        goto state 35
	FunCall        goto state 36
	LExpr          goto state 37
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 42

	Boolean -> 'false' .                                (rule 18)

	'!='           reduce using rule 18
	'%'            reduce using rule 18
	'&&'           reduce using rule 18
	'&='           reduce using rule 18
	')'            reduce using rule 18
	'*'            reduce using rule 18
	'*='           reduce using rule 18
	'+'            reduce using rule 18
	'+='           reduce using rule 18
	','            reduce using rule 18
	'-'            reduce using rule 18
	'-='           reduce using rule 18
	'/'            reduce using rule 18
	'/='           reduce using rule 18
	';'            reduce using rule 18
	'<'            reduce using rule 18
	'<='           reduce using rule 18
	'='            reduce using rule 18
	'=='           reduce using rule 18
	'>'            reduce using rule 18
	'>='           reduce using rule 18
	']'            reduce using rule 18
	'^'            reduce using rule 18
	'^='           reduce using rule 18
	'|='           reduce using rule 18
	'||'           reduce using rule 18
	%eof           reduce using rule 18


State 43

	Boolean -> 'true' .                                 (rule 17)

	'!='           reduce using rule 17
	'%'            reduce using rule 17
	'&&'           reduce using rule 17
	'&='           reduce using rule 17
	')'            reduce using rule 17
	'*'            reduce using rule 17
	'*='           reduce using rule 17
	'+'            reduce using rule 17
	'+='           reduce using rule 17
	','            reduce using rule 17
	'-'            reduce using rule 17
	'-='           reduce using rule 17
	'/'            reduce using rule 17
	'/='           reduce using rule 17
	';'            reduce using rule 17
	'<'            reduce using rule 17
	'<='           reduce using rule 17
	'='            reduce using rule 17
	'=='           reduce using rule 17
	'>'            reduce using rule 17
	'>='           reduce using rule 17
	']'            reduce using rule 17
	'^'            reduce using rule 17
	'^='           reduce using rule 17
	'|='           reduce using rule 17
	'||'           reduce using rule 17
	%eof           reduce using rule 17


State 44

	Char -> L_charac .                                  (rule 5)

	'!='           reduce using rule 5
	'%'            reduce using rule 5
	'&&'           reduce using rule 5
	'&='           reduce using rule 5
	')'            reduce using rule 5
	'*'            reduce using rule 5
	'*='           reduce using rule 5
	'+'            reduce using rule 5
	'+='           reduce using rule 5
	','            reduce using rule 5
	'-'            reduce using rule 5
	'-='           reduce using rule 5
	'/'            reduce using rule 5
	'/='           reduce using rule 5
	';'            reduce using rule 5
	'<'            reduce using rule 5
	'<='           reduce using rule 5
	'='            reduce using rule 5
	'=='           reduce using rule 5
	'>'            reduce using rule 5
	'>='           reduce using rule 5
	']'            reduce using rule 5
	'^'            reduce using rule 5
	'^='           reduce using rule 5
	'|='           reduce using rule 5
	'||'           reduce using rule 5
	%eof           reduce using rule 5


State 45

	Double -> L_doubl .                                 (rule 6)

	'!='           reduce using rule 6
	'%'            reduce using rule 6
	'&&'           reduce using rule 6
	'&='           reduce using rule 6
	')'            reduce using rule 6
	'*'            reduce using rule 6
	'*='           reduce using rule 6
	'+'            reduce using rule 6
	'+='           reduce using rule 6
	','            reduce using rule 6
	'-'            reduce using rule 6
	'-='           reduce using rule 6
	'/'            reduce using rule 6
	'/='           reduce using rule 6
	';'            reduce using rule 6
	'<'            reduce using rule 6
	'<='           reduce using rule 6
	'='            reduce using rule 6
	'=='           reduce using rule 6
	'>'            reduce using rule 6
	'>='           reduce using rule 6
	']'            reduce using rule 6
	'^'            reduce using rule 6
	'^='           reduce using rule 6
	'|='           reduce using rule 6
	'||'           reduce using rule 6
	%eof           reduce using rule 6


State 46

	Integer -> L_integ .                                (rule 7)

	'!='           reduce using rule 7
	'%'            reduce using rule 7
	'&&'           reduce using rule 7
	'&='           reduce using rule 7
	')'            reduce using rule 7
	'*'            reduce using rule 7
	'*='           reduce using rule 7
	'+'            reduce using rule 7
	'+='           reduce using rule 7
	','            reduce using rule 7
	'-'            reduce using rule 7
	'-='           reduce using rule 7
	'/'            reduce using rule 7
	'/='           reduce using rule 7
	';'            reduce using rule 7
	'<'            reduce using rule 7
	'<='           reduce using rule 7
	'='            reduce using rule 7
	'=='           reduce using rule 7
	'>'            reduce using rule 7
	'>='           reduce using rule 7
	']'            reduce using rule 7
	'^'            reduce using rule 7
	'^='           reduce using rule 7
	'|='           reduce using rule 7
	'||'           reduce using rule 7
	%eof           reduce using rule 7


State 47

	String -> L_quoted .                                (rule 8)

	'!='           reduce using rule 8
	'%'            reduce using rule 8
	'&&'           reduce using rule 8
	'&='           reduce using rule 8
	')'            reduce using rule 8
	'*'            reduce using rule 8
	'*='           reduce using rule 8
	'+'            reduce using rule 8
	'+='           reduce using rule 8
	','            reduce using rule 8
	'-'            reduce using rule 8
	'-='           reduce using rule 8
	'/'            reduce using rule 8
	'/='           reduce using rule 8
	';'            reduce using rule 8
	'<'            reduce using rule 8
	'<='           reduce using rule 8
	'='            reduce using rule 8
	'=='           reduce using rule 8
	'>'            reduce using rule 8
	'>='           reduce using rule 8
	']'            reduce using rule 8
	'^'            reduce using rule 8
	'^='           reduce using rule 8
	'|='           reduce using rule 8
	'||'           reduce using rule 8
	%eof           reduce using rule 8


State 48

	Stmt -> FunCall . ';'                               (rule 105)

	';'            shift, and enter state 98


State 49

	Stmt -> LExpr . Assignment_op RExpr ';'             (rule 109)
	Stmt -> LExpr . ';'                                 (rule 110)

	'&='           shift, and enter state 89
	'*='           shift, and enter state 90
	'+='           shift, and enter state 91
	'-='           shift, and enter state 92
	'/='           shift, and enter state 93
	';'            shift, and enter state 94
	'='            shift, and enter state 95
	'^='           shift, and enter state 96
	'|='           shift, and enter state 97

	Assignment_op  goto state 88

State 50

	Stmt -> CompStmt .                                  (rule 104)

	'('            reduce using rule 104
	'*'            reduce using rule 104
	'++'           reduce using rule 104
	'--'           reduce using rule 104
	'break'        reduce using rule 104
	'continue'     reduce using rule 104
	'do'           reduce using rule 104
	'else'         reduce using rule 104
	'if'           reduce using rule 104
	'return'       reduce using rule 104
	'while'        reduce using rule 104
	'{'            reduce using rule 104
	'}'            reduce using rule 104
	L_Ident        reduce using rule 104
	%eof           reduce using rule 104


State 51

	CompStmt -> CompStmtNocolon . ';'                   (rule 99)
	CompStmt -> CompStmtNocolon .                       (rule 100)

	'('            reduce using rule 100
	'*'            reduce using rule 100
	'++'           reduce using rule 100
	'--'           reduce using rule 100
	';'            shift, and enter state 87
	'bool'         reduce using rule 100
	'break'        reduce using rule 100
	'char'         reduce using rule 100
	'continue'     reduce using rule 100
	'do'           reduce using rule 100
	'else'         reduce using rule 100
	'float'        reduce using rule 100
	'if'           reduce using rule 100
	'int'          reduce using rule 100
	'return'       reduce using rule 100
	'while'        reduce using rule 100
	'{'            reduce using rule 100
	'}'            reduce using rule 100
	L_Ident        reduce using rule 100
	%eof           reduce using rule 100


State 52

	%start_pStmt -> Stmt .                              (rule 1)

	%eof           accept


State 53

	Stmt -> JumpStmt . ';'                              (rule 106)

	';'            shift, and enter state 86


State 54

	Stmt -> SelectionStmt .                             (rule 108)

	'('            reduce using rule 108
	'*'            reduce using rule 108
	'++'           reduce using rule 108
	'--'           reduce using rule 108
	'break'        reduce using rule 108
	'continue'     reduce using rule 108
	'do'           reduce using rule 108
	'else'         reduce using rule 108
	'if'           reduce using rule 108
	'return'       reduce using rule 108
	'while'        reduce using rule 108
	'{'            reduce using rule 108
	'}'            reduce using rule 108
	L_Ident        reduce using rule 108
	%eof           reduce using rule 108


State 55

	Stmt -> IterStmt .                                  (rule 107)

	'('            reduce using rule 107
	'*'            reduce using rule 107
	'++'           reduce using rule 107
	'--'           reduce using rule 107
	'break'        reduce using rule 107
	'continue'     reduce using rule 107
	'do'           reduce using rule 107
	'else'         reduce using rule 107
	'if'           reduce using rule 107
	'return'       reduce using rule 107
	'while'        reduce using rule 107
	'{'            reduce using rule 107
	'}'            reduce using rule 107
	L_Ident        reduce using rule 107
	%eof           reduce using rule 107


State 56

	JumpStmt -> 'break' .                               (rule 119)

	';'            reduce using rule 119


State 57

	JumpStmt -> 'continue' .                            (rule 120)

	';'            reduce using rule 120


State 58

	IterStmt -> 'do' . Stmt 'while' '(' RExpr ')' ';'    (rule 126)

	'('            shift, and enter state 11
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'--'           shift, and enter state 14
	'break'        shift, and enter state 56
	'continue'     shift, and enter state 57
	'do'           shift, and enter state 58
	'if'           shift, and enter state 59
	'return'       shift, and enter state 60
	'while'        shift, and enter state 61
	'{'            shift, and enter state 62
	L_Ident        shift, and enter state 5

	Ident          goto state 15
	FunCall        goto state 48
	LExpr          goto state 49
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10
	CompStmt       goto state 50
	CompStmtNocolongoto state 51
	Stmt           goto state 85
	JumpStmt       goto state 53
	SelectionStmt  goto state 54
	IterStmt       goto state 55

State 59

	SelectionStmt -> 'if' . '(' RExpr ')' Stmt          (rule 123)
	SelectionStmt -> 'if' . '(' RExpr ')' Stmt 'else' Stmt    (rule 124)

	'('            shift, and enter state 84


State 60

	JumpStmt -> 'return' .                              (rule 121)
	JumpStmt -> 'return' . '(' RExpr ')'                (rule 122)

	'('            shift, and enter state 83
	';'            reduce using rule 121


State 61

	IterStmt -> 'while' . '(' RExpr ')' Stmt            (rule 125)

	'('            shift, and enter state 82


State 62

	CompStmtNocolon -> '{' . ListDecl ListStmt '}'      (rule 101)

	'('            reduce using rule 74
	'*'            reduce using rule 74
	'++'           reduce using rule 74
	'--'           reduce using rule 74
	'bool'         shift, and enter state 69
	'break'        reduce using rule 74
	'char'         shift, and enter state 70
	'continue'     reduce using rule 74
	'do'           reduce using rule 74
	'float'        shift, and enter state 71
	'if'           reduce using rule 74
	'int'          shift, and enter state 72
	'return'       reduce using rule 74
	'while'        reduce using rule 74
	'{'            reduce using rule 74
	'}'            reduce using rule 74
	L_Ident        reduce using rule 74

	ListDecl       goto state 81
	Decl           goto state 65
	TypeSpec       goto state 66
	BasicType      goto state 67
	CompoundType   goto state 68

State 63

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 64

	Program -> ListDecl .                               (rule 73)

	%eof           reduce using rule 73


State 65

	ListDecl -> Decl . ListDecl                         (rule 75)

	'('            reduce using rule 74
	'*'            reduce using rule 74
	'++'           reduce using rule 74
	'--'           reduce using rule 74
	'bool'         shift, and enter state 69
	'break'        reduce using rule 74
	'char'         shift, and enter state 70
	'continue'     reduce using rule 74
	'do'           reduce using rule 74
	'float'        shift, and enter state 71
	'if'           reduce using rule 74
	'int'          shift, and enter state 72
	'return'       reduce using rule 74
	'while'        reduce using rule 74
	'{'            reduce using rule 74
	'}'            reduce using rule 74
	L_Ident        reduce using rule 74
	%eof           reduce using rule 74

	ListDecl       goto state 80
	Decl           goto state 65
	TypeSpec       goto state 66
	BasicType      goto state 67
	CompoundType   goto state 68

State 66

	Decl -> TypeSpec . ListVarDeclInit ';'              (rule 77)
	CompoundType -> TypeSpec . '[' Integer ']'          (rule 87)
	CompoundType -> TypeSpec . '[' ']'                  (rule 88)
	CompoundType -> TypeSpec . '*'                      (rule 89)

	'*'            shift, and enter state 78
	'['            shift, and enter state 79
	L_Ident        shift, and enter state 5

	Ident          goto state 76
	ListVarDeclInitgoto state 77
	VarDeclInit    goto state 75

State 67

	Decl -> BasicType . ListVarDeclInit ';'             (rule 76)
	Decl -> BasicType . Ident '(' ListParameter ')' CompStmt    (rule 78)
	TypeSpec -> BasicType .                             (rule 81)

	'*'            reduce using rule 81
	'['            reduce using rule 81
	L_Ident        shift, and enter state 5
			(reduce using rule 81)


	Ident          goto state 73
	ListVarDeclInitgoto state 74
	VarDeclInit    goto state 75

State 68

	TypeSpec -> CompoundType .                          (rule 82)

	'*'            reduce using rule 82
	'['            reduce using rule 82
	L_Ident        reduce using rule 82


State 69

	BasicType -> 'bool' .                               (rule 83)

	'*'            reduce using rule 83
	'['            reduce using rule 83
	L_Ident        reduce using rule 83


State 70

	BasicType -> 'char' .                               (rule 84)

	'*'            reduce using rule 84
	'['            reduce using rule 84
	L_Ident        reduce using rule 84


State 71

	BasicType -> 'float' .                              (rule 85)

	'*'            reduce using rule 85
	'['            reduce using rule 85
	L_Ident        reduce using rule 85


State 72

	BasicType -> 'int' .                                (rule 86)

	'*'            reduce using rule 86
	'['            reduce using rule 86
	L_Ident        reduce using rule 86


State 73

	Decl -> BasicType Ident . '(' ListParameter ')' CompStmt    (rule 78)
	VarDeclInit -> Ident . '=' ComplexRExpr             (rule 90)

	'('            shift, and enter state 158
	'='            shift, and enter state 155


State 74

	Decl -> BasicType ListVarDeclInit . ';'             (rule 76)

	';'            shift, and enter state 157


State 75

	ListVarDeclInit -> VarDeclInit .                    (rule 79)
	ListVarDeclInit -> VarDeclInit . ',' ListVarDeclInit    (rule 80)

	','            shift, and enter state 156
	';'            reduce using rule 79


State 76

	VarDeclInit -> Ident . '=' ComplexRExpr             (rule 90)

	'='            shift, and enter state 155


State 77

	Decl -> TypeSpec ListVarDeclInit . ';'              (rule 77)

	';'            shift, and enter state 154


State 78

	CompoundType -> TypeSpec '*' .                      (rule 89)

	'*'            reduce using rule 89
	'['            reduce using rule 89
	L_Ident        reduce using rule 89


State 79

	CompoundType -> TypeSpec '[' . Integer ']'          (rule 87)
	CompoundType -> TypeSpec '[' . ']'                  (rule 88)

	']'            shift, and enter state 153
	L_integ        shift, and enter state 46

	Integer        goto state 152

State 80

	ListDecl -> Decl ListDecl .                         (rule 75)

	'('            reduce using rule 75
	'*'            reduce using rule 75
	'++'           reduce using rule 75
	'--'           reduce using rule 75
	'break'        reduce using rule 75
	'continue'     reduce using rule 75
	'do'           reduce using rule 75
	'if'           reduce using rule 75
	'return'       reduce using rule 75
	'while'        reduce using rule 75
	'{'            reduce using rule 75
	'}'            reduce using rule 75
	L_Ident        reduce using rule 75
	%eof           reduce using rule 75


State 81

	CompStmtNocolon -> '{' ListDecl . ListStmt '}'      (rule 101)

	'('            shift, and enter state 11
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'--'           shift, and enter state 14
	'break'        shift, and enter state 56
	'continue'     shift, and enter state 57
	'do'           shift, and enter state 58
	'if'           shift, and enter state 59
	'return'       shift, and enter state 60
	'while'        shift, and enter state 61
	'{'            shift, and enter state 62
	'}'            reduce using rule 102
	L_Ident        shift, and enter state 5

	Ident          goto state 15
	FunCall        goto state 48
	LExpr          goto state 49
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10
	CompStmt       goto state 50
	CompStmtNocolongoto state 51
	ListStmt       goto state 150
	Stmt           goto state 151
	JumpStmt       goto state 53
	SelectionStmt  goto state 54
	IterStmt       goto state 55

State 82

	IterStmt -> 'while' '(' . RExpr ')' Stmt            (rule 125)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 41
	'--'           shift, and enter state 14
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 15
	Char           goto state 16
	Double         goto state 17
	Integer        goto state 18
	String         goto state 19
	Boolean        goto state 20
	RExpr          goto state 149
	RExpr1         goto state 22
	RExpr2         goto state 23
	RExpr3         goto state 24
	RExpr4         goto state 25
	RExpr5         goto state 26
	RExpr6         goto state 27
	RExpr7         goto state 28
	RExpr8         goto state 29
	RExpr9         goto state 30
	RExpr10        goto state 31
	RExpr11        goto state 32
	RExpr12        goto state 33
	RExpr13        goto state 34
	RExpr14        goto state 35
	FunCall        goto state 36
	LExpr          goto state 37
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 83

	JumpStmt -> 'return' '(' . RExpr ')'                (rule 122)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 41
	'--'           shift, and enter state 14
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 15
	Char           goto state 16
	Double         goto state 17
	Integer        goto state 18
	String         goto state 19
	Boolean        goto state 20
	RExpr          goto state 148
	RExpr1         goto state 22
	RExpr2         goto state 23
	RExpr3         goto state 24
	RExpr4         goto state 25
	RExpr5         goto state 26
	RExpr6         goto state 27
	RExpr7         goto state 28
	RExpr8         goto state 29
	RExpr9         goto state 30
	RExpr10        goto state 31
	RExpr11        goto state 32
	RExpr12        goto state 33
	RExpr13        goto state 34
	RExpr14        goto state 35
	FunCall        goto state 36
	LExpr          goto state 37
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 84

	SelectionStmt -> 'if' '(' . RExpr ')' Stmt          (rule 123)
	SelectionStmt -> 'if' '(' . RExpr ')' Stmt 'else' Stmt    (rule 124)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 41
	'--'           shift, and enter state 14
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 15
	Char           goto state 16
	Double         goto state 17
	Integer        goto state 18
	String         goto state 19
	Boolean        goto state 20
	RExpr          goto state 147
	RExpr1         goto state 22
	RExpr2         goto state 23
	RExpr3         goto state 24
	RExpr4         goto state 25
	RExpr5         goto state 26
	RExpr6         goto state 27
	RExpr7         goto state 28
	RExpr8         goto state 29
	RExpr9         goto state 30
	RExpr10        goto state 31
	RExpr11        goto state 32
	RExpr12        goto state 33
	RExpr13        goto state 34
	RExpr14        goto state 35
	FunCall        goto state 36
	LExpr          goto state 37
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 85

	IterStmt -> 'do' Stmt . 'while' '(' RExpr ')' ';'    (rule 126)

	'while'        shift, and enter state 146


State 86

	Stmt -> JumpStmt ';' .                              (rule 106)

	'('            reduce using rule 106
	'*'            reduce using rule 106
	'++'           reduce using rule 106
	'--'           reduce using rule 106
	'break'        reduce using rule 106
	'continue'     reduce using rule 106
	'do'           reduce using rule 106
	'else'         reduce using rule 106
	'if'           reduce using rule 106
	'return'       reduce using rule 106
	'while'        reduce using rule 106
	'{'            reduce using rule 106
	'}'            reduce using rule 106
	L_Ident        reduce using rule 106
	%eof           reduce using rule 106


State 87

	CompStmt -> CompStmtNocolon ';' .                   (rule 99)

	'('            reduce using rule 99
	'*'            reduce using rule 99
	'++'           reduce using rule 99
	'--'           reduce using rule 99
	'bool'         reduce using rule 99
	'break'        reduce using rule 99
	'char'         reduce using rule 99
	'continue'     reduce using rule 99
	'do'           reduce using rule 99
	'else'         reduce using rule 99
	'float'        reduce using rule 99
	'if'           reduce using rule 99
	'int'          reduce using rule 99
	'return'       reduce using rule 99
	'while'        reduce using rule 99
	'{'            reduce using rule 99
	'}'            reduce using rule 99
	L_Ident        reduce using rule 99
	%eof           reduce using rule 99


State 88

	Stmt -> LExpr Assignment_op . RExpr ';'             (rule 109)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 41
	'--'           shift, and enter state 14
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 15
	Char           goto state 16
	Double         goto state 17
	Integer        goto state 18
	String         goto state 19
	Boolean        goto state 20
	RExpr          goto state 145
	RExpr1         goto state 22
	RExpr2         goto state 23
	RExpr3         goto state 24
	RExpr4         goto state 25
	RExpr5         goto state 26
	RExpr6         goto state 27
	RExpr7         goto state 28
	RExpr8         goto state 29
	RExpr9         goto state 30
	RExpr10        goto state 31
	RExpr11        goto state 32
	RExpr12        goto state 33
	RExpr13        goto state 34
	RExpr14        goto state 35
	FunCall        goto state 36
	LExpr          goto state 37
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 89

	Assignment_op -> '&=' .                             (rule 117)

	'!'            reduce using rule 117
	'&'            reduce using rule 117
	'('            reduce using rule 117
	'*'            reduce using rule 117
	'++'           reduce using rule 117
	'-'            reduce using rule 117
	'--'           reduce using rule 117
	'false'        reduce using rule 117
	'true'         reduce using rule 117
	L_Ident        reduce using rule 117
	L_charac       reduce using rule 117
	L_doubl        reduce using rule 117
	L_integ        reduce using rule 117
	L_quoted       reduce using rule 117


State 90

	Assignment_op -> '*=' .                             (rule 112)

	'!'            reduce using rule 112
	'&'            reduce using rule 112
	'('            reduce using rule 112
	'*'            reduce using rule 112
	'++'           reduce using rule 112
	'-'            reduce using rule 112
	'--'           reduce using rule 112
	'false'        reduce using rule 112
	'true'         reduce using rule 112
	L_Ident        reduce using rule 112
	L_charac       reduce using rule 112
	L_doubl        reduce using rule 112
	L_integ        reduce using rule 112
	L_quoted       reduce using rule 112


State 91

	Assignment_op -> '+=' .                             (rule 113)

	'!'            reduce using rule 113
	'&'            reduce using rule 113
	'('            reduce using rule 113
	'*'            reduce using rule 113
	'++'           reduce using rule 113
	'-'            reduce using rule 113
	'--'           reduce using rule 113
	'false'        reduce using rule 113
	'true'         reduce using rule 113
	L_Ident        reduce using rule 113
	L_charac       reduce using rule 113
	L_doubl        reduce using rule 113
	L_integ        reduce using rule 113
	L_quoted       reduce using rule 113


State 92

	Assignment_op -> '-=' .                             (rule 115)

	'!'            reduce using rule 115
	'&'            reduce using rule 115
	'('            reduce using rule 115
	'*'            reduce using rule 115
	'++'           reduce using rule 115
	'-'            reduce using rule 115
	'--'           reduce using rule 115
	'false'        reduce using rule 115
	'true'         reduce using rule 115
	L_Ident        reduce using rule 115
	L_charac       reduce using rule 115
	L_doubl        reduce using rule 115
	L_integ        reduce using rule 115
	L_quoted       reduce using rule 115


State 93

	Assignment_op -> '/=' .                             (rule 114)

	'!'            reduce using rule 114
	'&'            reduce using rule 114
	'('            reduce using rule 114
	'*'            reduce using rule 114
	'++'           reduce using rule 114
	'-'            reduce using rule 114
	'--'           reduce using rule 114
	'false'        reduce using rule 114
	'true'         reduce using rule 114
	L_Ident        reduce using rule 114
	L_charac       reduce using rule 114
	L_doubl        reduce using rule 114
	L_integ        reduce using rule 114
	L_quoted       reduce using rule 114


State 94

	Stmt -> LExpr ';' .                                 (rule 110)

	'('            reduce using rule 110
	'*'            reduce using rule 110
	'++'           reduce using rule 110
	'--'           reduce using rule 110
	'break'        reduce using rule 110
	'continue'     reduce using rule 110
	'do'           reduce using rule 110
	'else'         reduce using rule 110
	'if'           reduce using rule 110
	'return'       reduce using rule 110
	'while'        reduce using rule 110
	'{'            reduce using rule 110
	'}'            reduce using rule 110
	L_Ident        reduce using rule 110
	%eof           reduce using rule 110


State 95

	Assignment_op -> '=' .                              (rule 111)

	'!'            reduce using rule 111
	'&'            reduce using rule 111
	'('            reduce using rule 111
	'*'            reduce using rule 111
	'++'           reduce using rule 111
	'-'            reduce using rule 111
	'--'           reduce using rule 111
	'false'        reduce using rule 111
	'true'         reduce using rule 111
	L_Ident        reduce using rule 111
	L_charac       reduce using rule 111
	L_doubl        reduce using rule 111
	L_integ        reduce using rule 111
	L_quoted       reduce using rule 111


State 96

	Assignment_op -> '^=' .                             (rule 116)

	'!'            reduce using rule 116
	'&'            reduce using rule 116
	'('            reduce using rule 116
	'*'            reduce using rule 116
	'++'           reduce using rule 116
	'-'            reduce using rule 116
	'--'           reduce using rule 116
	'false'        reduce using rule 116
	'true'         reduce using rule 116
	L_Ident        reduce using rule 116
	L_charac       reduce using rule 116
	L_doubl        reduce using rule 116
	L_integ        reduce using rule 116
	L_quoted       reduce using rule 116


State 97

	Assignment_op -> '|=' .                             (rule 118)

	'!'            reduce using rule 118
	'&'            reduce using rule 118
	'('            reduce using rule 118
	'*'            reduce using rule 118
	'++'           reduce using rule 118
	'-'            reduce using rule 118
	'--'           reduce using rule 118
	'false'        reduce using rule 118
	'true'         reduce using rule 118
	L_Ident        reduce using rule 118
	L_charac       reduce using rule 118
	L_doubl        reduce using rule 118
	L_integ        reduce using rule 118
	L_quoted       reduce using rule 118


State 98

	Stmt -> FunCall ';' .                               (rule 105)

	'('            reduce using rule 105
	'*'            reduce using rule 105
	'++'           reduce using rule 105
	'--'           reduce using rule 105
	'break'        reduce using rule 105
	'continue'     reduce using rule 105
	'do'           reduce using rule 105
	'else'         reduce using rule 105
	'if'           reduce using rule 105
	'return'       reduce using rule 105
	'while'        reduce using rule 105
	'{'            reduce using rule 105
	'}'            reduce using rule 105
	L_Ident        reduce using rule 105
	%eof           reduce using rule 105


State 99

	RExpr11 -> '-' RExpr12 .                            (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'&&'           reduce using rule 46
	'&='           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'*='           reduce using rule 46
	'+'            reduce using rule 46
	'+='           reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'-='           reduce using rule 46
	'/'            reduce using rule 46
	'/='           reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'='            reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	']'            reduce using rule 46
	'^'            reduce using rule 46
	'^='           reduce using rule 46
	'|='           reduce using rule 46
	'||'           reduce using rule 46
	%eof           reduce using rule 46


State 100

	RExpr -> RExpr . '||' RExpr1                        (rule 20)
	RExpr14 -> '(' RExpr . ')'                          (rule 56)

	')'            shift, and enter state 144
	'||'           shift, and enter state 117


State 101

	RExpr14 -> LExpr .                                  (rule 57)
	LExpr2 -> '(' LExpr . ')'                           (rule 69)

	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&&'           reduce using rule 57
	')'            shift, and enter state 127
			(reduce using rule 57)

	'*'            reduce using rule 57
	'+'            reduce using rule 57
	'-'            reduce using rule 57
	'/'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'^'            reduce using rule 57
	'||'           reduce using rule 57


State 102

	RExpr11 -> '&' LExpr .                              (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	'&='           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'*='           reduce using rule 47
	'+'            reduce using rule 47
	'+='           reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'-='           reduce using rule 47
	'/'            reduce using rule 47
	'/='           reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'='            reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	']'            reduce using rule 47
	'^'            reduce using rule 47
	'^='           reduce using rule 47
	'|='           reduce using rule 47
	'||'           reduce using rule 47
	%eof           reduce using rule 47


State 103

	RExpr2 -> '!' RExpr3 .                              (rule 24)

	'!='           reduce using rule 24
	'%'            reduce using rule 24
	'&&'           reduce using rule 24
	'&='           reduce using rule 24
	')'            reduce using rule 24
	'*'            reduce using rule 24
	'*='           reduce using rule 24
	'+'            reduce using rule 24
	'+='           reduce using rule 24
	','            reduce using rule 24
	'-'            reduce using rule 24
	'-='           reduce using rule 24
	'/'            reduce using rule 24
	'/='           reduce using rule 24
	';'            reduce using rule 24
	'<'            reduce using rule 24
	'<='           reduce using rule 24
	'='            reduce using rule 24
	'=='           reduce using rule 24
	'>'            reduce using rule 24
	'>='           reduce using rule 24
	']'            reduce using rule 24
	'^'            reduce using rule 24
	'^='           reduce using rule 24
	'|='           reduce using rule 24
	'||'           reduce using rule 24
	%eof           reduce using rule 24


State 104

	RExpr9 -> RExpr10 '^' . RExpr9                      (rule 43)

	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 41
	'--'           shift, and enter state 14
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 15
	Char           goto state 16
	Double         goto state 17
	Integer        goto state 18
	String         goto state 19
	Boolean        goto state 20
	RExpr9         goto state 143
	RExpr10        goto state 31
	RExpr11        goto state 32
	RExpr12        goto state 33
	RExpr13        goto state 34
	RExpr14        goto state 35
	FunCall        goto state 36
	LExpr          goto state 37
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 105

	RExpr8 -> RExpr8 '%' . RExpr9                       (rule 41)

	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 41
	'--'           shift, and enter state 14
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 15
	Char           goto state 16
	Double         goto state 17
	Integer        goto state 18
	String         goto state 19
	Boolean        goto state 20
	RExpr9         goto state 142
	RExpr10        goto state 31
	RExpr11        goto state 32
	RExpr12        goto state 33
	RExpr13        goto state 34
	RExpr14        goto state 35
	FunCall        goto state 36
	LExpr          goto state 37
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 106

	RExpr8 -> RExpr8 '*' . RExpr9                       (rule 39)

	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 41
	'--'           shift, and enter state 14
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 15
	Char           goto state 16
	Double         goto state 17
	Integer        goto state 18
	String         goto state 19
	Boolean        goto state 20
	RExpr9         goto state 141
	RExpr10        goto state 31
	RExpr11        goto state 32
	RExpr12        goto state 33
	RExpr13        goto state 34
	RExpr14        goto state 35
	FunCall        goto state 36
	LExpr          goto state 37
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 107

	RExpr8 -> RExpr8 '/' . RExpr9                       (rule 40)

	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 41
	'--'           shift, and enter state 14
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 15
	Char           goto state 16
	Double         goto state 17
	Integer        goto state 18
	String         goto state 19
	Boolean        goto state 20
	RExpr9         goto state 140
	RExpr10        goto state 31
	RExpr11        goto state 32
	RExpr12        goto state 33
	RExpr13        goto state 34
	RExpr14        goto state 35
	FunCall        goto state 36
	LExpr          goto state 37
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 108

	RExpr7 -> RExpr7 '+' . RExpr8                       (rule 36)

	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 41
	'--'           shift, and enter state 14
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 15
	Char           goto state 16
	Double         goto state 17
	Integer        goto state 18
	String         goto state 19
	Boolean        goto state 20
	RExpr8         goto state 139
	RExpr9         goto state 30
	RExpr10        goto state 31
	RExpr11        goto state 32
	RExpr12        goto state 33
	RExpr13        goto state 34
	RExpr14        goto state 35
	FunCall        goto state 36
	LExpr          goto state 37
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 109

	RExpr7 -> RExpr7 '-' . RExpr8                       (rule 37)

	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 41
	'--'           shift, and enter state 14
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 15
	Char           goto state 16
	Double         goto state 17
	Integer        goto state 18
	String         goto state 19
	Boolean        goto state 20
	RExpr8         goto state 138
	RExpr9         goto state 30
	RExpr10        goto state 31
	RExpr11        goto state 32
	RExpr12        goto state 33
	RExpr13        goto state 34
	RExpr14        goto state 35
	FunCall        goto state 36
	LExpr          goto state 37
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 110

	RExpr5 -> RExpr6 '!=' . RExpr6                      (rule 29)

	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 41
	'--'           shift, and enter state 14
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 15
	Char           goto state 16
	Double         goto state 17
	Integer        goto state 18
	String         goto state 19
	Boolean        goto state 20
	RExpr6         goto state 137
	RExpr7         goto state 28
	RExpr8         goto state 29
	RExpr9         goto state 30
	RExpr10        goto state 31
	RExpr11        goto state 32
	RExpr12        goto state 33
	RExpr13        goto state 34
	RExpr14        goto state 35
	FunCall        goto state 36
	LExpr          goto state 37
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 111

	RExpr5 -> RExpr6 '<' . RExpr6                       (rule 30)

	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 41
	'--'           shift, and enter state 14
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 15
	Char           goto state 16
	Double         goto state 17
	Integer        goto state 18
	String         goto state 19
	Boolean        goto state 20
	RExpr6         goto state 136
	RExpr7         goto state 28
	RExpr8         goto state 29
	RExpr9         goto state 30
	RExpr10        goto state 31
	RExpr11        goto state 32
	RExpr12        goto state 33
	RExpr13        goto state 34
	RExpr14        goto state 35
	FunCall        goto state 36
	LExpr          goto state 37
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 112

	RExpr5 -> RExpr6 '<=' . RExpr6                      (rule 31)

	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 41
	'--'           shift, and enter state 14
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 15
	Char           goto state 16
	Double         goto state 17
	Integer        goto state 18
	String         goto state 19
	Boolean        goto state 20
	RExpr6         goto state 135
	RExpr7         goto state 28
	RExpr8         goto state 29
	RExpr9         goto state 30
	RExpr10        goto state 31
	RExpr11        goto state 32
	RExpr12        goto state 33
	RExpr13        goto state 34
	RExpr14        goto state 35
	FunCall        goto state 36
	LExpr          goto state 37
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 113

	RExpr5 -> RExpr6 '==' . RExpr6                      (rule 28)

	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 41
	'--'           shift, and enter state 14
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 15
	Char           goto state 16
	Double         goto state 17
	Integer        goto state 18
	String         goto state 19
	Boolean        goto state 20
	RExpr6         goto state 134
	RExpr7         goto state 28
	RExpr8         goto state 29
	RExpr9         goto state 30
	RExpr10        goto state 31
	RExpr11        goto state 32
	RExpr12        goto state 33
	RExpr13        goto state 34
	RExpr14        goto state 35
	FunCall        goto state 36
	LExpr          goto state 37
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 114

	RExpr5 -> RExpr6 '>' . RExpr6                       (rule 32)

	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 41
	'--'           shift, and enter state 14
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 15
	Char           goto state 16
	Double         goto state 17
	Integer        goto state 18
	String         goto state 19
	Boolean        goto state 20
	RExpr6         goto state 133
	RExpr7         goto state 28
	RExpr8         goto state 29
	RExpr9         goto state 30
	RExpr10        goto state 31
	RExpr11        goto state 32
	RExpr12        goto state 33
	RExpr13        goto state 34
	RExpr14        goto state 35
	FunCall        goto state 36
	LExpr          goto state 37
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 115

	RExpr5 -> RExpr6 '>=' . RExpr6                      (rule 33)

	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 41
	'--'           shift, and enter state 14
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 15
	Char           goto state 16
	Double         goto state 17
	Integer        goto state 18
	String         goto state 19
	Boolean        goto state 20
	RExpr6         goto state 132
	RExpr7         goto state 28
	RExpr8         goto state 29
	RExpr9         goto state 30
	RExpr10        goto state 31
	RExpr11        goto state 32
	RExpr12        goto state 33
	RExpr13        goto state 34
	RExpr14        goto state 35
	FunCall        goto state 36
	LExpr          goto state 37
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 116

	RExpr1 -> RExpr1 '&&' . RExpr2                      (rule 22)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 41
	'--'           shift, and enter state 14
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 15
	Char           goto state 16
	Double         goto state 17
	Integer        goto state 18
	String         goto state 19
	Boolean        goto state 20
	RExpr2         goto state 131
	RExpr3         goto state 24
	RExpr4         goto state 25
	RExpr5         goto state 26
	RExpr6         goto state 27
	RExpr7         goto state 28
	RExpr8         goto state 29
	RExpr9         goto state 30
	RExpr10        goto state 31
	RExpr11        goto state 32
	RExpr12        goto state 33
	RExpr13        goto state 34
	RExpr14        goto state 35
	FunCall        goto state 36
	LExpr          goto state 37
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 117

	RExpr -> RExpr '||' . RExpr1                        (rule 20)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 41
	'--'           shift, and enter state 14
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 15
	Char           goto state 16
	Double         goto state 17
	Integer        goto state 18
	String         goto state 19
	Boolean        goto state 20
	RExpr1         goto state 130
	RExpr2         goto state 23
	RExpr3         goto state 24
	RExpr4         goto state 25
	RExpr5         goto state 26
	RExpr6         goto state 27
	RExpr7         goto state 28
	RExpr8         goto state 29
	RExpr9         goto state 30
	RExpr10        goto state 31
	RExpr11        goto state 32
	RExpr12        goto state 33
	RExpr13        goto state 34
	RExpr14        goto state 35
	FunCall        goto state 36
	LExpr          goto state 37
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 118

	FunCall -> Ident '(' . ListRExpr ')'                (rule 58)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	')'            reduce using rule 59
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 41
	'--'           shift, and enter state 14
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 15
	Char           goto state 16
	Double         goto state 17
	Integer        goto state 18
	String         goto state 19
	Boolean        goto state 20
	RExpr          goto state 128
	RExpr1         goto state 22
	RExpr2         goto state 23
	RExpr3         goto state 24
	RExpr4         goto state 25
	RExpr5         goto state 26
	RExpr6         goto state 27
	RExpr7         goto state 28
	RExpr8         goto state 29
	RExpr9         goto state 30
	RExpr10        goto state 31
	RExpr11        goto state 32
	RExpr12        goto state 33
	RExpr13        goto state 34
	RExpr14        goto state 35
	FunCall        goto state 36
	ListRExpr      goto state 129
	LExpr          goto state 37
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 119

	LExpr -> '--' LExpr1 .                              (rule 65)

	'!='           reduce using rule 65
	'%'            reduce using rule 65
	'&&'           reduce using rule 65
	'&='           reduce using rule 65
	')'            reduce using rule 65
	'*'            reduce using rule 65
	'*='           reduce using rule 65
	'+'            reduce using rule 65
	'+='           reduce using rule 65
	','            reduce using rule 65
	'-'            reduce using rule 65
	'-='           reduce using rule 65
	'/'            reduce using rule 65
	'/='           reduce using rule 65
	';'            reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'='            reduce using rule 65
	'=='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	']'            reduce using rule 65
	'^'            reduce using rule 65
	'^='           reduce using rule 65
	'|='           reduce using rule 65
	'||'           reduce using rule 65
	%eof           reduce using rule 65


State 120

	LExpr -> '++' LExpr1 .                              (rule 64)

	'!='           reduce using rule 64
	'%'            reduce using rule 64
	'&&'           reduce using rule 64
	'&='           reduce using rule 64
	')'            reduce using rule 64
	'*'            reduce using rule 64
	'*='           reduce using rule 64
	'+'            reduce using rule 64
	'+='           reduce using rule 64
	','            reduce using rule 64
	'-'            reduce using rule 64
	'-='           reduce using rule 64
	'/'            reduce using rule 64
	'/='           reduce using rule 64
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'='            reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	']'            reduce using rule 64
	'^'            reduce using rule 64
	'^='           reduce using rule 64
	'|='           reduce using rule 64
	'||'           reduce using rule 64
	%eof           reduce using rule 64


State 121

	RExpr -> RExpr . '||' RExpr1                        (rule 20)
	LExpr -> '*' RExpr .                                (rule 63)

	'!='           reduce using rule 63
	'%'            reduce using rule 63
	'&&'           reduce using rule 63
	'&='           reduce using rule 63
	')'            reduce using rule 63
	'*'            reduce using rule 63
	'*='           reduce using rule 63
	'+'            reduce using rule 63
	'+='           reduce using rule 63
	','            reduce using rule 63
	'-'            reduce using rule 63
	'-='           reduce using rule 63
	'/'            reduce using rule 63
	'/='           reduce using rule 63
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'='            reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	']'            reduce using rule 63
	'^'            reduce using rule 63
	'^='           reduce using rule 63
	'|='           reduce using rule 63
	'||'           shift, and enter state 117
			(reduce using rule 63)

	%eof           reduce using rule 63


State 122

	LExpr2 -> '(' LExpr . ')'                           (rule 69)

	')'            shift, and enter state 127


State 123

	BLExpr -> BLExpr '[' . RExpr ']'                    (rule 71)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 41
	'--'           shift, and enter state 14
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 15
	Char           goto state 16
	Double         goto state 17
	Integer        goto state 18
	String         goto state 19
	Boolean        goto state 20
	RExpr          goto state 126
	RExpr1         goto state 22
	RExpr2         goto state 23
	RExpr3         goto state 24
	RExpr4         goto state 25
	RExpr5         goto state 26
	RExpr6         goto state 27
	RExpr7         goto state 28
	RExpr8         goto state 29
	RExpr9         goto state 30
	RExpr10        goto state 31
	RExpr11        goto state 32
	RExpr12        goto state 33
	RExpr13        goto state 34
	RExpr14        goto state 35
	FunCall        goto state 36
	LExpr          goto state 37
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 124

	LExpr1 -> LExpr2 '++' .                             (rule 67)

	'!='           reduce using rule 67
	'%'            reduce using rule 67
	'&&'           reduce using rule 67
	'&='           reduce using rule 67
	')'            reduce using rule 67
	'*'            reduce using rule 67
	'*='           reduce using rule 67
	'+'            reduce using rule 67
	'+='           reduce using rule 67
	','            reduce using rule 67
	'-'            reduce using rule 67
	'-='           reduce using rule 67
	'/'            reduce using rule 67
	'/='           reduce using rule 67
	';'            reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'='            reduce using rule 67
	'=='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	']'            reduce using rule 67
	'^'            reduce using rule 67
	'^='           reduce using rule 67
	'|='           reduce using rule 67
	'||'           reduce using rule 67
	%eof           reduce using rule 67


State 125

	LExpr1 -> LExpr2 '--' .                             (rule 68)

	'!='           reduce using rule 68
	'%'            reduce using rule 68
	'&&'           reduce using rule 68
	'&='           reduce using rule 68
	')'            reduce using rule 68
	'*'            reduce using rule 68
	'*='           reduce using rule 68
	'+'            reduce using rule 68
	'+='           reduce using rule 68
	','            reduce using rule 68
	'-'            reduce using rule 68
	'-='           reduce using rule 68
	'/'            reduce using rule 68
	'/='           reduce using rule 68
	';'            reduce using rule 68
	'<'            reduce using rule 68
	'<='           reduce using rule 68
	'='            reduce using rule 68
	'=='           reduce using rule 68
	'>'            reduce using rule 68
	'>='           reduce using rule 68
	']'            reduce using rule 68
	'^'            reduce using rule 68
	'^='           reduce using rule 68
	'|='           reduce using rule 68
	'||'           reduce using rule 68
	%eof           reduce using rule 68


State 126

	RExpr -> RExpr . '||' RExpr1                        (rule 20)
	BLExpr -> BLExpr '[' RExpr . ']'                    (rule 71)

	']'            shift, and enter state 177
	'||'           shift, and enter state 117


State 127

	LExpr2 -> '(' LExpr ')' .                           (rule 69)

	'!='           reduce using rule 69
	'%'            reduce using rule 69
	'&&'           reduce using rule 69
	'&='           reduce using rule 69
	')'            reduce using rule 69
	'*'            reduce using rule 69
	'*='           reduce using rule 69
	'+'            reduce using rule 69
	'++'           reduce using rule 69
	'+='           reduce using rule 69
	','            reduce using rule 69
	'-'            reduce using rule 69
	'--'           reduce using rule 69
	'-='           reduce using rule 69
	'/'            reduce using rule 69
	'/='           reduce using rule 69
	';'            reduce using rule 69
	'<'            reduce using rule 69
	'<='           reduce using rule 69
	'='            reduce using rule 69
	'=='           reduce using rule 69
	'>'            reduce using rule 69
	'>='           reduce using rule 69
	']'            reduce using rule 69
	'^'            reduce using rule 69
	'^='           reduce using rule 69
	'|='           reduce using rule 69
	'||'           reduce using rule 69
	%eof           reduce using rule 69


State 128

	RExpr -> RExpr . '||' RExpr1                        (rule 20)
	ListRExpr -> RExpr .                                (rule 60)
	ListRExpr -> RExpr . ',' ListRExpr                  (rule 61)

	')'            reduce using rule 60
	','            shift, and enter state 176
	'||'           shift, and enter state 117


State 129

	FunCall -> Ident '(' ListRExpr . ')'                (rule 58)

	')'            shift, and enter state 175


State 130

	RExpr -> RExpr '||' RExpr1 .                        (rule 20)
	RExpr1 -> RExpr1 . '&&' RExpr2                      (rule 22)

	'!='           reduce using rule 20
	'%'            reduce using rule 20
	'&&'           shift, and enter state 116
			(reduce using rule 20)

	'&='           reduce using rule 20
	')'            reduce using rule 20
	'*'            reduce using rule 20
	'*='           reduce using rule 20
	'+'            reduce using rule 20
	'+='           reduce using rule 20
	','            reduce using rule 20
	'-'            reduce using rule 20
	'-='           reduce using rule 20
	'/'            reduce using rule 20
	'/='           reduce using rule 20
	';'            reduce using rule 20
	'<'            reduce using rule 20
	'<='           reduce using rule 20
	'='            reduce using rule 20
	'=='           reduce using rule 20
	'>'            reduce using rule 20
	'>='           reduce using rule 20
	']'            reduce using rule 20
	'^'            reduce using rule 20
	'^='           reduce using rule 20
	'|='           reduce using rule 20
	'||'           reduce using rule 20
	%eof           reduce using rule 20


State 131

	RExpr1 -> RExpr1 '&&' RExpr2 .                      (rule 22)

	'!='           reduce using rule 22
	'%'            reduce using rule 22
	'&&'           reduce using rule 22
	'&='           reduce using rule 22
	')'            reduce using rule 22
	'*'            reduce using rule 22
	'*='           reduce using rule 22
	'+'            reduce using rule 22
	'+='           reduce using rule 22
	','            reduce using rule 22
	'-'            reduce using rule 22
	'-='           reduce using rule 22
	'/'            reduce using rule 22
	'/='           reduce using rule 22
	';'            reduce using rule 22
	'<'            reduce using rule 22
	'<='           reduce using rule 22
	'='            reduce using rule 22
	'=='           reduce using rule 22
	'>'            reduce using rule 22
	'>='           reduce using rule 22
	']'            reduce using rule 22
	'^'            reduce using rule 22
	'^='           reduce using rule 22
	'|='           reduce using rule 22
	'||'           reduce using rule 22
	%eof           reduce using rule 22


State 132

	RExpr5 -> RExpr6 '>=' RExpr6 .                      (rule 33)

	'!='           reduce using rule 33
	'%'            reduce using rule 33
	'&&'           reduce using rule 33
	'&='           reduce using rule 33
	')'            reduce using rule 33
	'*'            reduce using rule 33
	'*='           reduce using rule 33
	'+'            reduce using rule 33
	'+='           reduce using rule 33
	','            reduce using rule 33
	'-'            reduce using rule 33
	'-='           reduce using rule 33
	'/'            reduce using rule 33
	'/='           reduce using rule 33
	';'            reduce using rule 33
	'<'            reduce using rule 33
	'<='           reduce using rule 33
	'='            reduce using rule 33
	'=='           reduce using rule 33
	'>'            reduce using rule 33
	'>='           reduce using rule 33
	']'            reduce using rule 33
	'^'            reduce using rule 33
	'^='           reduce using rule 33
	'|='           reduce using rule 33
	'||'           reduce using rule 33
	%eof           reduce using rule 33


State 133

	RExpr5 -> RExpr6 '>' RExpr6 .                       (rule 32)

	'!='           reduce using rule 32
	'%'            reduce using rule 32
	'&&'           reduce using rule 32
	'&='           reduce using rule 32
	')'            reduce using rule 32
	'*'            reduce using rule 32
	'*='           reduce using rule 32
	'+'            reduce using rule 32
	'+='           reduce using rule 32
	','            reduce using rule 32
	'-'            reduce using rule 32
	'-='           reduce using rule 32
	'/'            reduce using rule 32
	'/='           reduce using rule 32
	';'            reduce using rule 32
	'<'            reduce using rule 32
	'<='           reduce using rule 32
	'='            reduce using rule 32
	'=='           reduce using rule 32
	'>'            reduce using rule 32
	'>='           reduce using rule 32
	']'            reduce using rule 32
	'^'            reduce using rule 32
	'^='           reduce using rule 32
	'|='           reduce using rule 32
	'||'           reduce using rule 32
	%eof           reduce using rule 32


State 134

	RExpr5 -> RExpr6 '==' RExpr6 .                      (rule 28)

	'!='           reduce using rule 28
	'%'            reduce using rule 28
	'&&'           reduce using rule 28
	'&='           reduce using rule 28
	')'            reduce using rule 28
	'*'            reduce using rule 28
	'*='           reduce using rule 28
	'+'            reduce using rule 28
	'+='           reduce using rule 28
	','            reduce using rule 28
	'-'            reduce using rule 28
	'-='           reduce using rule 28
	'/'            reduce using rule 28
	'/='           reduce using rule 28
	';'            reduce using rule 28
	'<'            reduce using rule 28
	'<='           reduce using rule 28
	'='            reduce using rule 28
	'=='           reduce using rule 28
	'>'            reduce using rule 28
	'>='           reduce using rule 28
	']'            reduce using rule 28
	'^'            reduce using rule 28
	'^='           reduce using rule 28
	'|='           reduce using rule 28
	'||'           reduce using rule 28
	%eof           reduce using rule 28


State 135

	RExpr5 -> RExpr6 '<=' RExpr6 .                      (rule 31)

	'!='           reduce using rule 31
	'%'            reduce using rule 31
	'&&'           reduce using rule 31
	'&='           reduce using rule 31
	')'            reduce using rule 31
	'*'            reduce using rule 31
	'*='           reduce using rule 31
	'+'            reduce using rule 31
	'+='           reduce using rule 31
	','            reduce using rule 31
	'-'            reduce using rule 31
	'-='           reduce using rule 31
	'/'            reduce using rule 31
	'/='           reduce using rule 31
	';'            reduce using rule 31
	'<'            reduce using rule 31
	'<='           reduce using rule 31
	'='            reduce using rule 31
	'=='           reduce using rule 31
	'>'            reduce using rule 31
	'>='           reduce using rule 31
	']'            reduce using rule 31
	'^'            reduce using rule 31
	'^='           reduce using rule 31
	'|='           reduce using rule 31
	'||'           reduce using rule 31
	%eof           reduce using rule 31


State 136

	RExpr5 -> RExpr6 '<' RExpr6 .                       (rule 30)

	'!='           reduce using rule 30
	'%'            reduce using rule 30
	'&&'           reduce using rule 30
	'&='           reduce using rule 30
	')'            reduce using rule 30
	'*'            reduce using rule 30
	'*='           reduce using rule 30
	'+'            reduce using rule 30
	'+='           reduce using rule 30
	','            reduce using rule 30
	'-'            reduce using rule 30
	'-='           reduce using rule 30
	'/'            reduce using rule 30
	'/='           reduce using rule 30
	';'            reduce using rule 30
	'<'            reduce using rule 30
	'<='           reduce using rule 30
	'='            reduce using rule 30
	'=='           reduce using rule 30
	'>'            reduce using rule 30
	'>='           reduce using rule 30
	']'            reduce using rule 30
	'^'            reduce using rule 30
	'^='           reduce using rule 30
	'|='           reduce using rule 30
	'||'           reduce using rule 30
	%eof           reduce using rule 30


State 137

	RExpr5 -> RExpr6 '!=' RExpr6 .                      (rule 29)

	'!='           reduce using rule 29
	'%'            reduce using rule 29
	'&&'           reduce using rule 29
	'&='           reduce using rule 29
	')'            reduce using rule 29
	'*'            reduce using rule 29
	'*='           reduce using rule 29
	'+'            reduce using rule 29
	'+='           reduce using rule 29
	','            reduce using rule 29
	'-'            reduce using rule 29
	'-='           reduce using rule 29
	'/'            reduce using rule 29
	'/='           reduce using rule 29
	';'            reduce using rule 29
	'<'            reduce using rule 29
	'<='           reduce using rule 29
	'='            reduce using rule 29
	'=='           reduce using rule 29
	'>'            reduce using rule 29
	'>='           reduce using rule 29
	']'            reduce using rule 29
	'^'            reduce using rule 29
	'^='           reduce using rule 29
	'|='           reduce using rule 29
	'||'           reduce using rule 29
	%eof           reduce using rule 29


State 138

	RExpr7 -> RExpr7 '-' RExpr8 .                       (rule 37)
	RExpr8 -> RExpr8 . '*' RExpr9                       (rule 39)
	RExpr8 -> RExpr8 . '/' RExpr9                       (rule 40)
	RExpr8 -> RExpr8 . '%' RExpr9                       (rule 41)

	'!='           reduce using rule 37
	'%'            shift, and enter state 105
			(reduce using rule 37)

	'&&'           reduce using rule 37
	'&='           reduce using rule 37
	')'            reduce using rule 37
	'*'            shift, and enter state 106
			(reduce using rule 37)

	'*='           reduce using rule 37
	'+'            reduce using rule 37
	'+='           reduce using rule 37
	','            reduce using rule 37
	'-'            reduce using rule 37
	'-='           reduce using rule 37
	'/'            shift, and enter state 107
			(reduce using rule 37)

	'/='           reduce using rule 37
	';'            reduce using rule 37
	'<'            reduce using rule 37
	'<='           reduce using rule 37
	'='            reduce using rule 37
	'=='           reduce using rule 37
	'>'            reduce using rule 37
	'>='           reduce using rule 37
	']'            reduce using rule 37
	'^'            reduce using rule 37
	'^='           reduce using rule 37
	'|='           reduce using rule 37
	'||'           reduce using rule 37
	%eof           reduce using rule 37


State 139

	RExpr7 -> RExpr7 '+' RExpr8 .                       (rule 36)
	RExpr8 -> RExpr8 . '*' RExpr9                       (rule 39)
	RExpr8 -> RExpr8 . '/' RExpr9                       (rule 40)
	RExpr8 -> RExpr8 . '%' RExpr9                       (rule 41)

	'!='           reduce using rule 36
	'%'            shift, and enter state 105
			(reduce using rule 36)

	'&&'           reduce using rule 36
	'&='           reduce using rule 36
	')'            reduce using rule 36
	'*'            shift, and enter state 106
			(reduce using rule 36)

	'*='           reduce using rule 36
	'+'            reduce using rule 36
	'+='           reduce using rule 36
	','            reduce using rule 36
	'-'            reduce using rule 36
	'-='           reduce using rule 36
	'/'            shift, and enter state 107
			(reduce using rule 36)

	'/='           reduce using rule 36
	';'            reduce using rule 36
	'<'            reduce using rule 36
	'<='           reduce using rule 36
	'='            reduce using rule 36
	'=='           reduce using rule 36
	'>'            reduce using rule 36
	'>='           reduce using rule 36
	']'            reduce using rule 36
	'^'            reduce using rule 36
	'^='           reduce using rule 36
	'|='           reduce using rule 36
	'||'           reduce using rule 36
	%eof           reduce using rule 36


State 140

	RExpr8 -> RExpr8 '/' RExpr9 .                       (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&&'           reduce using rule 40
	'&='           reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'*='           reduce using rule 40
	'+'            reduce using rule 40
	'+='           reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'-='           reduce using rule 40
	'/'            reduce using rule 40
	'/='           reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'='            reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	']'            reduce using rule 40
	'^'            reduce using rule 40
	'^='           reduce using rule 40
	'|='           reduce using rule 40
	'||'           reduce using rule 40
	%eof           reduce using rule 40


State 141

	RExpr8 -> RExpr8 '*' RExpr9 .                       (rule 39)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&&'           reduce using rule 39
	'&='           reduce using rule 39
	')'            reduce using rule 39
	'*'            reduce using rule 39
	'*='           reduce using rule 39
	'+'            reduce using rule 39
	'+='           reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'-='           reduce using rule 39
	'/'            reduce using rule 39
	'/='           reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'='            reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	']'            reduce using rule 39
	'^'            reduce using rule 39
	'^='           reduce using rule 39
	'|='           reduce using rule 39
	'||'           reduce using rule 39
	%eof           reduce using rule 39


State 142

	RExpr8 -> RExpr8 '%' RExpr9 .                       (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	'&='           reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'*='           reduce using rule 41
	'+'            reduce using rule 41
	'+='           reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'-='           reduce using rule 41
	'/'            reduce using rule 41
	'/='           reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'='            reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	']'            reduce using rule 41
	'^'            reduce using rule 41
	'^='           reduce using rule 41
	'|='           reduce using rule 41
	'||'           reduce using rule 41
	%eof           reduce using rule 41


State 143

	RExpr9 -> RExpr10 '^' RExpr9 .                      (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	'&='           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'*='           reduce using rule 43
	'+'            reduce using rule 43
	'+='           reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'-='           reduce using rule 43
	'/'            reduce using rule 43
	'/='           reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'='            reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	']'            reduce using rule 43
	'^'            reduce using rule 43
	'^='           reduce using rule 43
	'|='           reduce using rule 43
	'||'           reduce using rule 43
	%eof           reduce using rule 43


State 144

	RExpr14 -> '(' RExpr ')' .                          (rule 56)

	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&&'           reduce using rule 56
	'&='           reduce using rule 56
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'*='           reduce using rule 56
	'+'            reduce using rule 56
	'+='           reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'-='           reduce using rule 56
	'/'            reduce using rule 56
	'/='           reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'='            reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	']'            reduce using rule 56
	'^'            reduce using rule 56
	'^='           reduce using rule 56
	'|='           reduce using rule 56
	'||'           reduce using rule 56
	%eof           reduce using rule 56


State 145

	RExpr -> RExpr . '||' RExpr1                        (rule 20)
	Stmt -> LExpr Assignment_op RExpr . ';'             (rule 109)

	';'            shift, and enter state 174
	'||'           shift, and enter state 117


State 146

	IterStmt -> 'do' Stmt 'while' . '(' RExpr ')' ';'    (rule 126)

	'('            shift, and enter state 173


State 147

	RExpr -> RExpr . '||' RExpr1                        (rule 20)
	SelectionStmt -> 'if' '(' RExpr . ')' Stmt          (rule 123)
	SelectionStmt -> 'if' '(' RExpr . ')' Stmt 'else' Stmt    (rule 124)

	')'            shift, and enter state 172
	'||'           shift, and enter state 117


State 148

	RExpr -> RExpr . '||' RExpr1                        (rule 20)
	JumpStmt -> 'return' '(' RExpr . ')'                (rule 122)

	')'            shift, and enter state 171
	'||'           shift, and enter state 117


State 149

	RExpr -> RExpr . '||' RExpr1                        (rule 20)
	IterStmt -> 'while' '(' RExpr . ')' Stmt            (rule 125)

	')'            shift, and enter state 170
	'||'           shift, and enter state 117


State 150

	CompStmtNocolon -> '{' ListDecl ListStmt . '}'      (rule 101)

	'}'            shift, and enter state 169


State 151

	ListStmt -> Stmt . ListStmt                         (rule 103)

	'('            shift, and enter state 11
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'--'           shift, and enter state 14
	'break'        shift, and enter state 56
	'continue'     shift, and enter state 57
	'do'           shift, and enter state 58
	'if'           shift, and enter state 59
	'return'       shift, and enter state 60
	'while'        shift, and enter state 61
	'{'            shift, and enter state 62
	'}'            reduce using rule 102
	L_Ident        shift, and enter state 5

	Ident          goto state 15
	FunCall        goto state 48
	LExpr          goto state 49
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10
	CompStmt       goto state 50
	CompStmtNocolongoto state 51
	ListStmt       goto state 168
	Stmt           goto state 151
	JumpStmt       goto state 53
	SelectionStmt  goto state 54
	IterStmt       goto state 55

State 152

	CompoundType -> TypeSpec '[' Integer . ']'          (rule 87)

	']'            shift, and enter state 167


State 153

	CompoundType -> TypeSpec '[' ']' .                  (rule 88)

	'*'            reduce using rule 88
	'['            reduce using rule 88
	L_Ident        reduce using rule 88


State 154

	Decl -> TypeSpec ListVarDeclInit ';' .              (rule 77)

	'('            reduce using rule 77
	'*'            reduce using rule 77
	'++'           reduce using rule 77
	'--'           reduce using rule 77
	'bool'         reduce using rule 77
	'break'        reduce using rule 77
	'char'         reduce using rule 77
	'continue'     reduce using rule 77
	'do'           reduce using rule 77
	'float'        reduce using rule 77
	'if'           reduce using rule 77
	'int'          reduce using rule 77
	'return'       reduce using rule 77
	'while'        reduce using rule 77
	'{'            reduce using rule 77
	'}'            reduce using rule 77
	L_Ident        reduce using rule 77
	%eof           reduce using rule 77


State 155

	VarDeclInit -> Ident '=' . ComplexRExpr             (rule 90)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 41
	'--'           shift, and enter state 14
	'['            shift, and enter state 166
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 15
	Char           goto state 16
	Double         goto state 17
	Integer        goto state 18
	String         goto state 19
	Boolean        goto state 20
	RExpr          goto state 164
	RExpr1         goto state 22
	RExpr2         goto state 23
	RExpr3         goto state 24
	RExpr4         goto state 25
	RExpr5         goto state 26
	RExpr6         goto state 27
	RExpr7         goto state 28
	RExpr8         goto state 29
	RExpr9         goto state 30
	RExpr10        goto state 31
	RExpr11        goto state 32
	RExpr12        goto state 33
	RExpr13        goto state 34
	RExpr14        goto state 35
	FunCall        goto state 36
	LExpr          goto state 37
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10
	ComplexRExpr   goto state 165

State 156

	ListVarDeclInit -> VarDeclInit ',' . ListVarDeclInit    (rule 80)

	L_Ident        shift, and enter state 5

	Ident          goto state 76
	ListVarDeclInitgoto state 163
	VarDeclInit    goto state 75

State 157

	Decl -> BasicType ListVarDeclInit ';' .             (rule 76)

	'('            reduce using rule 76
	'*'            reduce using rule 76
	'++'           reduce using rule 76
	'--'           reduce using rule 76
	'bool'         reduce using rule 76
	'break'        reduce using rule 76
	'char'         reduce using rule 76
	'continue'     reduce using rule 76
	'do'           reduce using rule 76
	'float'        reduce using rule 76
	'if'           reduce using rule 76
	'int'          reduce using rule 76
	'return'       reduce using rule 76
	'while'        reduce using rule 76
	'{'            reduce using rule 76
	'}'            reduce using rule 76
	L_Ident        reduce using rule 76
	%eof           reduce using rule 76


State 158

	Decl -> BasicType Ident '(' . ListParameter ')' CompStmt    (rule 78)

	')'            reduce using rule 95
	'bool'         shift, and enter state 69
	'char'         shift, and enter state 70
	'float'        shift, and enter state 71
	'int'          shift, and enter state 72

	TypeSpec       goto state 159
	BasicType      goto state 160
	CompoundType   goto state 68
	ListParameter  goto state 161
	Parameter      goto state 162

State 159

	CompoundType -> TypeSpec . '[' Integer ']'          (rule 87)
	CompoundType -> TypeSpec . '[' ']'                  (rule 88)
	CompoundType -> TypeSpec . '*'                      (rule 89)
	Parameter -> TypeSpec . Ident                       (rule 98)

	'*'            shift, and enter state 78
	'['            shift, and enter state 79
	L_Ident        shift, and enter state 5

	Ident          goto state 186

State 160

	TypeSpec -> BasicType .                             (rule 81)

	'*'            reduce using rule 81
	'['            reduce using rule 81
	L_Ident        reduce using rule 81


State 161

	Decl -> BasicType Ident '(' ListParameter . ')' CompStmt    (rule 78)

	')'            shift, and enter state 185


State 162

	ListParameter -> Parameter .                        (rule 96)
	ListParameter -> Parameter . ',' ListParameter      (rule 97)

	')'            reduce using rule 96
	','            shift, and enter state 184


State 163

	ListVarDeclInit -> VarDeclInit ',' ListVarDeclInit .    (rule 80)

	';'            reduce using rule 80


State 164

	RExpr -> RExpr . '||' RExpr1                        (rule 20)
	ComplexRExpr -> RExpr .                             (rule 91)

	','            reduce using rule 91
	';'            reduce using rule 91
	']'            reduce using rule 91
	'||'           shift, and enter state 117


State 165

	VarDeclInit -> Ident '=' ComplexRExpr .             (rule 90)

	','            reduce using rule 90
	';'            reduce using rule 90


State 166

	ComplexRExpr -> '[' . ListComplexRExpr ']'          (rule 92)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 41
	'--'           shift, and enter state 14
	'['            shift, and enter state 166
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 15
	Char           goto state 16
	Double         goto state 17
	Integer        goto state 18
	String         goto state 19
	Boolean        goto state 20
	RExpr          goto state 164
	RExpr1         goto state 22
	RExpr2         goto state 23
	RExpr3         goto state 24
	RExpr4         goto state 25
	RExpr5         goto state 26
	RExpr6         goto state 27
	RExpr7         goto state 28
	RExpr8         goto state 29
	RExpr9         goto state 30
	RExpr10        goto state 31
	RExpr11        goto state 32
	RExpr12        goto state 33
	RExpr13        goto state 34
	RExpr14        goto state 35
	FunCall        goto state 36
	LExpr          goto state 37
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10
	ComplexRExpr   goto state 182
	ListComplexRExprgoto state 183

State 167

	CompoundType -> TypeSpec '[' Integer ']' .          (rule 87)

	'*'            reduce using rule 87
	'['            reduce using rule 87
	L_Ident        reduce using rule 87


State 168

	ListStmt -> Stmt ListStmt .                         (rule 103)

	'}'            reduce using rule 103


State 169

	CompStmtNocolon -> '{' ListDecl ListStmt '}' .      (rule 101)

	'('            reduce using rule 101
	'*'            reduce using rule 101
	'++'           reduce using rule 101
	'--'           reduce using rule 101
	';'            reduce using rule 101
	'bool'         reduce using rule 101
	'break'        reduce using rule 101
	'char'         reduce using rule 101
	'continue'     reduce using rule 101
	'do'           reduce using rule 101
	'else'         reduce using rule 101
	'float'        reduce using rule 101
	'if'           reduce using rule 101
	'int'          reduce using rule 101
	'return'       reduce using rule 101
	'while'        reduce using rule 101
	'{'            reduce using rule 101
	'}'            reduce using rule 101
	L_Ident        reduce using rule 101
	%eof           reduce using rule 101


State 170

	IterStmt -> 'while' '(' RExpr ')' . Stmt            (rule 125)

	'('            shift, and enter state 11
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'--'           shift, and enter state 14
	'break'        shift, and enter state 56
	'continue'     shift, and enter state 57
	'do'           shift, and enter state 58
	'if'           shift, and enter state 59
	'return'       shift, and enter state 60
	'while'        shift, and enter state 61
	'{'            shift, and enter state 62
	L_Ident        shift, and enter state 5

	Ident          goto state 15
	FunCall        goto state 48
	LExpr          goto state 49
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10
	CompStmt       goto state 50
	CompStmtNocolongoto state 51
	Stmt           goto state 181
	JumpStmt       goto state 53
	SelectionStmt  goto state 54
	IterStmt       goto state 55

State 171

	JumpStmt -> 'return' '(' RExpr ')' .                (rule 122)

	';'            reduce using rule 122


State 172

	SelectionStmt -> 'if' '(' RExpr ')' . Stmt          (rule 123)
	SelectionStmt -> 'if' '(' RExpr ')' . Stmt 'else' Stmt    (rule 124)

	'('            shift, and enter state 11
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'--'           shift, and enter state 14
	'break'        shift, and enter state 56
	'continue'     shift, and enter state 57
	'do'           shift, and enter state 58
	'if'           shift, and enter state 59
	'return'       shift, and enter state 60
	'while'        shift, and enter state 61
	'{'            shift, and enter state 62
	L_Ident        shift, and enter state 5

	Ident          goto state 15
	FunCall        goto state 48
	LExpr          goto state 49
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10
	CompStmt       goto state 50
	CompStmtNocolongoto state 51
	Stmt           goto state 180
	JumpStmt       goto state 53
	SelectionStmt  goto state 54
	IterStmt       goto state 55

State 173

	IterStmt -> 'do' Stmt 'while' '(' . RExpr ')' ';'    (rule 126)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 41
	'--'           shift, and enter state 14
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 15
	Char           goto state 16
	Double         goto state 17
	Integer        goto state 18
	String         goto state 19
	Boolean        goto state 20
	RExpr          goto state 179
	RExpr1         goto state 22
	RExpr2         goto state 23
	RExpr3         goto state 24
	RExpr4         goto state 25
	RExpr5         goto state 26
	RExpr6         goto state 27
	RExpr7         goto state 28
	RExpr8         goto state 29
	RExpr9         goto state 30
	RExpr10        goto state 31
	RExpr11        goto state 32
	RExpr12        goto state 33
	RExpr13        goto state 34
	RExpr14        goto state 35
	FunCall        goto state 36
	LExpr          goto state 37
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 174

	Stmt -> LExpr Assignment_op RExpr ';' .             (rule 109)

	'('            reduce using rule 109
	'*'            reduce using rule 109
	'++'           reduce using rule 109
	'--'           reduce using rule 109
	'break'        reduce using rule 109
	'continue'     reduce using rule 109
	'do'           reduce using rule 109
	'else'         reduce using rule 109
	'if'           reduce using rule 109
	'return'       reduce using rule 109
	'while'        reduce using rule 109
	'{'            reduce using rule 109
	'}'            reduce using rule 109
	L_Ident        reduce using rule 109
	%eof           reduce using rule 109


State 175

	FunCall -> Ident '(' ListRExpr ')' .                (rule 58)

	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&&'           reduce using rule 58
	'&='           reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'*='           reduce using rule 58
	'+'            reduce using rule 58
	'+='           reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'-='           reduce using rule 58
	'/'            reduce using rule 58
	'/='           reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'='            reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	']'            reduce using rule 58
	'^'            reduce using rule 58
	'^='           reduce using rule 58
	'|='           reduce using rule 58
	'||'           reduce using rule 58
	%eof           reduce using rule 58


State 176

	ListRExpr -> RExpr ',' . ListRExpr                  (rule 61)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	')'            reduce using rule 59
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 41
	'--'           shift, and enter state 14
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 15
	Char           goto state 16
	Double         goto state 17
	Integer        goto state 18
	String         goto state 19
	Boolean        goto state 20
	RExpr          goto state 128
	RExpr1         goto state 22
	RExpr2         goto state 23
	RExpr3         goto state 24
	RExpr4         goto state 25
	RExpr5         goto state 26
	RExpr6         goto state 27
	RExpr7         goto state 28
	RExpr8         goto state 29
	RExpr9         goto state 30
	RExpr10        goto state 31
	RExpr11        goto state 32
	RExpr12        goto state 33
	RExpr13        goto state 34
	RExpr14        goto state 35
	FunCall        goto state 36
	ListRExpr      goto state 178
	LExpr          goto state 37
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 177

	BLExpr -> BLExpr '[' RExpr ']' .                    (rule 71)

	'!='           reduce using rule 71
	'%'            reduce using rule 71
	'&&'           reduce using rule 71
	'&='           reduce using rule 71
	')'            reduce using rule 71
	'*'            reduce using rule 71
	'*='           reduce using rule 71
	'+'            reduce using rule 71
	'++'           reduce using rule 71
	'+='           reduce using rule 71
	','            reduce using rule 71
	'-'            reduce using rule 71
	'--'           reduce using rule 71
	'-='           reduce using rule 71
	'/'            reduce using rule 71
	'/='           reduce using rule 71
	';'            reduce using rule 71
	'<'            reduce using rule 71
	'<='           reduce using rule 71
	'='            reduce using rule 71
	'=='           reduce using rule 71
	'>'            reduce using rule 71
	'>='           reduce using rule 71
	'['            reduce using rule 71
	']'            reduce using rule 71
	'^'            reduce using rule 71
	'^='           reduce using rule 71
	'|='           reduce using rule 71
	'||'           reduce using rule 71
	%eof           reduce using rule 71


State 178

	ListRExpr -> RExpr ',' ListRExpr .                  (rule 61)

	')'            reduce using rule 61


State 179

	RExpr -> RExpr . '||' RExpr1                        (rule 20)
	IterStmt -> 'do' Stmt 'while' '(' RExpr . ')' ';'    (rule 126)

	')'            shift, and enter state 192
	'||'           shift, and enter state 117


State 180

	SelectionStmt -> 'if' '(' RExpr ')' Stmt .          (rule 123)
	SelectionStmt -> 'if' '(' RExpr ')' Stmt . 'else' Stmt    (rule 124)

	'('            reduce using rule 123
	'*'            reduce using rule 123
	'++'           reduce using rule 123
	'--'           reduce using rule 123
	'break'        reduce using rule 123
	'continue'     reduce using rule 123
	'do'           reduce using rule 123
	'else'         shift, and enter state 191
			(reduce using rule 123)

	'if'           reduce using rule 123
	'return'       reduce using rule 123
	'while'        reduce using rule 123
	'{'            reduce using rule 123
	'}'            reduce using rule 123
	L_Ident        reduce using rule 123
	%eof           reduce using rule 123


State 181

	IterStmt -> 'while' '(' RExpr ')' Stmt .            (rule 125)

	'('            reduce using rule 125
	'*'            reduce using rule 125
	'++'           reduce using rule 125
	'--'           reduce using rule 125
	'break'        reduce using rule 125
	'continue'     reduce using rule 125
	'do'           reduce using rule 125
	'else'         reduce using rule 125
	'if'           reduce using rule 125
	'return'       reduce using rule 125
	'while'        reduce using rule 125
	'{'            reduce using rule 125
	'}'            reduce using rule 125
	L_Ident        reduce using rule 125
	%eof           reduce using rule 125


State 182

	ListComplexRExpr -> ComplexRExpr .                  (rule 93)
	ListComplexRExpr -> ComplexRExpr . ',' ListComplexRExpr    (rule 94)

	','            shift, and enter state 190
	']'            reduce using rule 93


State 183

	ComplexRExpr -> '[' ListComplexRExpr . ']'          (rule 92)

	']'            shift, and enter state 189


State 184

	ListParameter -> Parameter ',' . ListParameter      (rule 97)

	')'            reduce using rule 95
	'bool'         shift, and enter state 69
	'char'         shift, and enter state 70
	'float'        shift, and enter state 71
	'int'          shift, and enter state 72

	TypeSpec       goto state 159
	BasicType      goto state 160
	CompoundType   goto state 68
	ListParameter  goto state 188
	Parameter      goto state 162

State 185

	Decl -> BasicType Ident '(' ListParameter ')' . CompStmt    (rule 78)

	'{'            shift, and enter state 62

	CompStmt       goto state 187
	CompStmtNocolongoto state 51

State 186

	Parameter -> TypeSpec Ident .                       (rule 98)

	')'            reduce using rule 98
	','            reduce using rule 98


State 187

	Decl -> BasicType Ident '(' ListParameter ')' CompStmt .    (rule 78)

	'('            reduce using rule 78
	'*'            reduce using rule 78
	'++'           reduce using rule 78
	'--'           reduce using rule 78
	'bool'         reduce using rule 78
	'break'        reduce using rule 78
	'char'         reduce using rule 78
	'continue'     reduce using rule 78
	'do'           reduce using rule 78
	'float'        reduce using rule 78
	'if'           reduce using rule 78
	'int'          reduce using rule 78
	'return'       reduce using rule 78
	'while'        reduce using rule 78
	'{'            reduce using rule 78
	'}'            reduce using rule 78
	L_Ident        reduce using rule 78
	%eof           reduce using rule 78


State 188

	ListParameter -> Parameter ',' ListParameter .      (rule 97)

	')'            reduce using rule 97


State 189

	ComplexRExpr -> '[' ListComplexRExpr ']' .          (rule 92)

	','            reduce using rule 92
	';'            reduce using rule 92
	']'            reduce using rule 92


State 190

	ListComplexRExpr -> ComplexRExpr ',' . ListComplexRExpr    (rule 94)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 41
	'--'           shift, and enter state 14
	'['            shift, and enter state 166
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 15
	Char           goto state 16
	Double         goto state 17
	Integer        goto state 18
	String         goto state 19
	Boolean        goto state 20
	RExpr          goto state 164
	RExpr1         goto state 22
	RExpr2         goto state 23
	RExpr3         goto state 24
	RExpr4         goto state 25
	RExpr5         goto state 26
	RExpr6         goto state 27
	RExpr7         goto state 28
	RExpr8         goto state 29
	RExpr9         goto state 30
	RExpr10        goto state 31
	RExpr11        goto state 32
	RExpr12        goto state 33
	RExpr13        goto state 34
	RExpr14        goto state 35
	FunCall        goto state 36
	LExpr          goto state 37
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10
	ComplexRExpr   goto state 182
	ListComplexRExprgoto state 195

State 191

	SelectionStmt -> 'if' '(' RExpr ')' Stmt 'else' . Stmt    (rule 124)

	'('            shift, and enter state 11
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'--'           shift, and enter state 14
	'break'        shift, and enter state 56
	'continue'     shift, and enter state 57
	'do'           shift, and enter state 58
	'if'           shift, and enter state 59
	'return'       shift, and enter state 60
	'while'        shift, and enter state 61
	'{'            shift, and enter state 62
	L_Ident        shift, and enter state 5

	Ident          goto state 15
	FunCall        goto state 48
	LExpr          goto state 49
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10
	CompStmt       goto state 50
	CompStmtNocolongoto state 51
	Stmt           goto state 194
	JumpStmt       goto state 53
	SelectionStmt  goto state 54
	IterStmt       goto state 55

State 192

	IterStmt -> 'do' Stmt 'while' '(' RExpr ')' . ';'    (rule 126)

	';'            shift, and enter state 193


State 193

	IterStmt -> 'do' Stmt 'while' '(' RExpr ')' ';' .    (rule 126)

	'('            reduce using rule 126
	'*'            reduce using rule 126
	'++'           reduce using rule 126
	'--'           reduce using rule 126
	'break'        reduce using rule 126
	'continue'     reduce using rule 126
	'do'           reduce using rule 126
	'else'         reduce using rule 126
	'if'           reduce using rule 126
	'return'       reduce using rule 126
	'while'        reduce using rule 126
	'{'            reduce using rule 126
	'}'            reduce using rule 126
	L_Ident        reduce using rule 126
	%eof           reduce using rule 126


State 194

	SelectionStmt -> 'if' '(' RExpr ')' Stmt 'else' Stmt .    (rule 124)

	'('            reduce using rule 124
	'*'            reduce using rule 124
	'++'           reduce using rule 124
	'--'           reduce using rule 124
	'break'        reduce using rule 124
	'continue'     reduce using rule 124
	'do'           reduce using rule 124
	'else'         reduce using rule 124
	'if'           reduce using rule 124
	'return'       reduce using rule 124
	'while'        reduce using rule 124
	'{'            reduce using rule 124
	'}'            reduce using rule 124
	L_Ident        reduce using rule 124
	%eof           reduce using rule 124


State 195

	ListComplexRExpr -> ComplexRExpr ',' ListComplexRExpr .    (rule 94)

	']'            reduce using rule 94


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 127
Number of terminals: 60
Number of non-terminals: 59
Number of states: 196
